{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Doctor.js\",\n  _s = $RefreshSig$();\n// DoctorPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n  const fetchPatientData = async () => {\n    try {\n      const symptoms = await getPatientSymptoms();\n      const blogPosts = await getPatientBlogPosts();\n      setPatientSymptoms(symptoms);\n      setPatientBlogPosts(blogPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleReply = async (postId, doctorUserId) => {\n    try {\n      await replyToPreMedicalForm(postId);\n      setSelectedDoctorId(doctorUserId);\n      // You may want to add a success message or update the state to reflect the reply\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleComment = async (postId, patientUserId) => {\n    try {\n      await createComment({\n        content: commentContent,\n        author: user.id,\n        blog_post: postId,\n        commenter_role: 'doctor',\n        // Assuming the commenter is a doctor\n        receiver: patientUserId\n      });\n\n      // You may want to add a success message or update the state to reflect the comment\n      setCommentContent('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), patientSymptoms.map(symptom => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: symptom.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: symptom.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, symptom.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), patientBlogPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), post.comments && post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Patient ID: \", comment.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)), !post.form_filled_by_doctor && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleReply(post.id),\n          children: \"Reply to Pre-Medical Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type your comment\",\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleComment(post.id, post.patient),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"rOakNe3DyKvBtN/0yE27GNThJtU=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientSymptoms","getPatientBlogPosts","replyToPreMedicalForm","createComment","Card","Button","jsxDEV","_jsxDEV","DoctorPage","_s","user","selectedDoctorId","setSelectedDoctorId","patientSymptoms","setPatientSymptoms","patientBlogPosts","setPatientBlogPosts","commentContent","setCommentContent","fetchPatientData","symptoms","blogPosts","error","console","handleReply","postId","doctorUserId","handleComment","patientUserId","content","author","id","blog_post","commenter_role","receiver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","symptom","style","width","marginBottom","Body","Title","title","Text","post","comments","comment","form_filled_by_doctor","onClick","placeholder","value","onChange","e","target","patient","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Doctor.js"],"sourcesContent":["// DoctorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst DoctorPage = () => {\r\n  const { user } = useAuth();\r\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\r\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatientData();\r\n  }, []);\r\n\r\n  const fetchPatientData = async () => {\r\n    try {\r\n      const symptoms = await getPatientSymptoms();\r\n      const blogPosts = await getPatientBlogPosts();\r\n\r\n      setPatientSymptoms(symptoms);\r\n      setPatientBlogPosts(blogPosts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleReply = async (postId, doctorUserId) => {\r\n    try {\r\n      await replyToPreMedicalForm(postId);\r\n      setSelectedDoctorId(doctorUserId);\r\n      // You may want to add a success message or update the state to reflect the reply\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId, patientUserId) => {\r\n    try {\r\n      await createComment({\r\n        content: commentContent,\r\n        author: user.id,\r\n        blog_post: postId,\r\n        commenter_role: 'doctor', // Assuming the commenter is a doctor\r\n        receiver: patientUserId,\r\n      });\r\n\r\n      // You may want to add a success message or update the state to reflect the comment\r\n      setCommentContent('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-page-container\">\r\n      <h2>Patient Symptoms</h2>\r\n      {patientSymptoms.map((symptom) => (\r\n        <Card key={symptom.id} style={{ width: '18rem', marginBottom: '1rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>{symptom.title}</Card.Title>\r\n            <Card.Text>{symptom.content}</Card.Text>\r\n            {/* Add rendering for symptom comments if needed */}\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n\r\n      <h2>Patient Blog Posts</h2>\r\n      {patientBlogPosts.map((post) => (\r\n        <Card key={post.id} style={{ width: '18rem', marginBottom: '1rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>{post.title}</Card.Title>\r\n            <Card.Text>{post.content}</Card.Text>\r\n            {post.comments && post.comments.map((comment) => (\r\n              <div key={comment.id} className=\"comment-container\">\r\n                <p>{comment.content}</p>\r\n                <p>Patient ID: {comment.author}</p>\r\n              </div>\r\n            ))}\r\n            {!post.form_filled_by_doctor && (\r\n              <Button onClick={() => handleReply(post.id)}>Reply to Pre-Medical Form</Button>\r\n            )}\r\n            <textarea\r\n              placeholder=\"Type your comment\"\r\n              value={commentContent}\r\n              onChange={(e) => setCommentContent(e.target.value)}\r\n            />\r\n            <Button onClick={() => handleComment(post.id, post.patient)}>Comment</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
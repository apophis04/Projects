{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Design\\\\Cards.js\",\n  _s = $RefreshSig$();\n// Inside your React component function\n\nimport { useState, useEffect } from 'react';\nimport { getComments } from '../apiService'; // Update the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const blogPostId = 1; // Replace with the actual blog post ID\n\n  useEffect(() => {\n    fetchComments(blogPostId);\n  }, [blogPostId]);\n  const fetchComments = async postId => {\n    try {\n      const commentsData = await getComments(postId);\n      setComments(commentsData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(YourComponent, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["useState","useEffect","getComments","jsxDEV","_jsxDEV","YourComponent","_s","comments","setComments","blogPostId","fetchComments","postId","commentsData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","content","id","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Design/Cards.js"],"sourcesContent":["// Inside your React component function\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { getComments } from '../apiService';  // Update the path based on your project structure\r\n\r\nconst YourComponent = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const blogPostId = 1;  // Replace with the actual blog post ID\r\n\r\n  useEffect(() => {\r\n    fetchComments(blogPostId);\r\n  }, [blogPostId]);\r\n\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const commentsData = await getComments(postId);\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>\r\n            <p>{comment.content}</p>\r\n            {/* Add other comment details as needed */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,UAAU,GAAG,CAAC,CAAC,CAAE;;EAEvBR,SAAS,CAAC,MAAM;IACdS,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMV,WAAW,CAACS,MAAM,CAAC;MAC9CH,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACET,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAAW,QAAA,EACGR,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBjB,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,EAAIM,OAAO,CAACC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADjBE,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\Auth\\\\User.js\",\n  _s = $RefreshSig$();\n// Index.js\nimport React, { useState, useEffect } from 'react';\nimport Cards from '../web_components/Cards';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Index({\n  backendUrl\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [userHasFilledForm, setUserHasFilledForm] = useState(false);\n  useEffect(() => {\n    // Fetch data from the backend using the passed backendUrl prop\n    axios.get(`${backendUrl}/`).then(response => {\n      setMessage(response.data.message);\n    }).catch(error => {\n      console.error('Error fetching data from the backend:', error);\n    });\n\n    // Simulate checking if the user has filled the pre_medical form\n    // Replace the following logic with your actual logic\n    setUserHasFilledForm(true);\n  }, [backendUrl]);\n  const containerStyle = {\n    backgroundColor: 'lightgray',\n    padding: '20px',\n    textAlign: 'center'\n  };\n  const messageStyle = {\n    fontSize: '24px',\n    color: 'black',\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: messageStyle,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Index, \"7IUFdfGgxvc7pCgIyFXKRZJDFGc=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","Cards","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","backendUrl","_s","message","setMessage","userHasFilledForm","setUserHasFilledForm","get","then","response","data","catch","error","console","containerStyle","backgroundColor","padding","textAlign","messageStyle","fontSize","color","children","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/components/Auth/User.js"],"sourcesContent":["// Index.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Cards from '../web_components/Cards';\r\nimport axios from 'axios';\r\n\r\nfunction Index({ backendUrl }) {\r\n  const [message, setMessage] = useState('');\r\n  const [userHasFilledForm, setUserHasFilledForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the backend using the passed backendUrl prop\r\n    axios\r\n      .get(`${backendUrl}/`)\r\n      .then((response) => {\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data from the backend:', error);\r\n      });\r\n\r\n    // Simulate checking if the user has filled the pre_medical form\r\n    // Replace the following logic with your actual logic\r\n    setUserHasFilledForm(true);\r\n  }, [backendUrl]);\r\n\r\n  const containerStyle = {\r\n    backgroundColor: 'lightgray',\r\n    padding: '20px',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const messageStyle = {\r\n    fontSize: '24px',\r\n    color: 'black',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div></div>\r\n      <div style={containerStyle}>\r\n        <h1 style={messageStyle}>{message}</h1>\r\n      </div>\r\n      <div>\r\n        <Cards />\r\n      </div>\r\n      <div style={containerStyle}></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFY,GAAG,CAAE,GAAEN,UAAW,GAAE,CAAC,CACrBO,IAAI,CAAEC,QAAQ,IAAK;MAClBL,UAAU,CAACK,QAAQ,CAACC,IAAI,CAACP,OAAO,CAAC;IACnC,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;;IAEJ;IACA;IACAN,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,MAAMa,cAAc,GAAG;IACrBC,eAAe,EAAE,WAAW;IAC5BC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,OAAO;IACdH,SAAS,EAAE;EACb,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACX5B,OAAA;MAAK6B,KAAK,EAAEZ,cAAe;MAAAO,QAAA,eACzBxB,OAAA;QAAI6B,KAAK,EAAER,YAAa;QAAAG,QAAA,EAAElB;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACN5B,OAAA;MAAAwB,QAAA,eACExB,OAAA,CAACH,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN5B,OAAA;MAAK6B,KAAK,EAAEZ;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAClC,CAAC;AAEP;AAACvB,EAAA,CA5CQF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
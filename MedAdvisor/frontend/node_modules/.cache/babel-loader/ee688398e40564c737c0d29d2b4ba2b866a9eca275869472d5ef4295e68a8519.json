{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Doctor.js\",\n  _s = $RefreshSig$();\n// DoctorPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n  const fetchPatientData = async () => {\n    try {\n      const symptoms = await getPatientSymptoms();\n      const blogPosts = await getPatientBlogPosts();\n      setPatientSymptoms(symptoms);\n      setPatientBlogPosts(blogPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleReply = async (postId, doctorUserId) => {\n    try {\n      await replyToPreMedicalForm(postId);\n      setSelectedDoctorId(doctorUserId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleComment = async (postId, patientUserId) => {\n    try {\n      await createComment({\n        content: commentContent,\n        author: user.id,\n        blog_post: postId,\n        commenter_role: 'doctor',\n        receiver: patientUserId\n      });\n      setCommentContent('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), patientSymptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symptom-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: symptom.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: symptom.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, symptom.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), patientBlogPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), post.comments && post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Patient ID: \", comment.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)), !post.form_filled_by_doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReply(post.id),\n        children: \"Reply to Pre-Medical Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type your comment\",\n        value: commentContent,\n        onChange: e => setCommentContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(post.id, post.patient),\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"rOakNe3DyKvBtN/0yE27GNThJtU=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientSymptoms","getPatientBlogPosts","replyToPreMedicalForm","createComment","jsxDEV","_jsxDEV","DoctorPage","_s","user","selectedDoctorId","setSelectedDoctorId","patientSymptoms","setPatientSymptoms","patientBlogPosts","setPatientBlogPosts","commentContent","setCommentContent","fetchPatientData","symptoms","blogPosts","error","console","handleReply","postId","doctorUserId","handleComment","patientUserId","content","author","id","blog_post","commenter_role","receiver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","symptom","title","post","comments","comment","form_filled_by_doctor","onClick","placeholder","value","onChange","e","target","patient","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Doctor.js"],"sourcesContent":["// DoctorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\r\n\r\nconst DoctorPage = () => {\r\n  const { user } = useAuth();\r\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\r\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatientData();\r\n  }, []);\r\n\r\n  const fetchPatientData = async () => {\r\n    try {\r\n      const symptoms = await getPatientSymptoms();\r\n      const blogPosts = await getPatientBlogPosts();\r\n\r\n      setPatientSymptoms(symptoms);\r\n      setPatientBlogPosts(blogPosts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleReply = async (postId, doctorUserId) => {\r\n    try {\r\n      await replyToPreMedicalForm(postId);\r\n      setSelectedDoctorId(doctorUserId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId, patientUserId) => {\r\n    try {\r\n      await createComment({\r\n        content: commentContent,\r\n        author: user.id,\r\n        blog_post: postId,\r\n        commenter_role: 'doctor',\r\n        receiver: patientUserId,\r\n      });\r\n\r\n      setCommentContent('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-page-container\">\r\n      <h2>Patient Symptoms</h2>\r\n      {patientSymptoms.map((symptom) => (\r\n        <div key={symptom.id} className=\"symptom-container\">\r\n          <h3>{symptom.title}</h3>\r\n          <p>{symptom.content}</p>\r\n          {/* Add rendering for symptom comments if needed */}\r\n        </div>\r\n      ))}\r\n\r\n      <h2>Patient Blog Posts</h2>\r\n      {patientBlogPosts.map((post) => (\r\n        <div key={post.id} className=\"post-container\">\r\n          <h3>{post.title}</h3>\r\n          <p>{post.content}</p>\r\n          {post.comments && post.comments.map((comment) => (\r\n            <div key={comment.id} className=\"comment-container\">\r\n              <p>{comment.content}</p>\r\n              <p>Patient ID: {comment.author}</p>\r\n            </div>\r\n          ))}\r\n          {!post.form_filled_by_doctor && (\r\n            <button onClick={() => handleReply(post.id)}>Reply to Pre-Medical Form</button>\r\n          )}\r\n          <textarea\r\n            placeholder=\"Type your comment\"\r\n            value={commentContent}\r\n            onChange={(e) => setCommentContent(e.target.value)}\r\n          />\r\n          <button onClick={() => handleComment(post.id, post.patient)}>Comment</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
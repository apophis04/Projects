{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\cmpts\\\\Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  roomName\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socket = io('http://localhost:8000'); // Replace with your Django backend URL\n\n  useEffect(() => {\n    socket.on('chat.message', message => {\n      setMessages([...messages, message]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n  const handleMessage = () => {\n    socket.emit('chat.message', {\n      message: newMessage\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '200px',\n        overflowY: 'scroll',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your message\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Chat","roomName","_s","messages","setMessages","newMessage","setNewMessage","socket","on","message","disconnect","handleMessage","emit","children","style","height","overflowY","border","padding","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/cmpts/Chat.js"],"sourcesContent":["// Chat.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst Chat = ({ roomName }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const socket = io('http://localhost:8000');  // Replace with your Django backend URL\r\n\r\n    useEffect(() => {\r\n        socket.on('chat.message', (message) => {\r\n            setMessages([...messages, message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [messages]);\r\n\r\n    const handleMessage = () => {\r\n        socket.emit('chat.message', { message: newMessage });\r\n        setNewMessage('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ height: '200px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>{msg.message}</div>\r\n                ))}\r\n            </div>\r\n            <textarea\r\n                placeholder=\"Type your message\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleMessage}>Send Message</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,MAAM,GAAGV,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAE;;EAE7CD,SAAS,CAAC,MAAM;IACZW,MAAM,CAACC,EAAE,CAAC,cAAc,EAAGC,OAAO,IAAK;MACnCL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,MAAM;MACTF,MAAM,CAACG,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxBJ,MAAM,CAACK,IAAI,CAAC,cAAc,EAAE;MAAEH,OAAO,EAAEJ;IAAW,CAAC,CAAC;IACpDC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAKe,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAL,QAAA,EAC3FV,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBtB,OAAA;QAAAc,QAAA,EAAkBO,GAAG,CAACX;MAAO,GAAnBY,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN1B,OAAA;MACI2B,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEtB,UAAW;MAClBuB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF1B,OAAA;MAAQgC,OAAO,EAAEpB,aAAc;MAAAE,QAAA,EAAC;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAACvB,EAAA,CAnCIF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
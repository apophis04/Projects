{"ast":null,"code":"import { userConstants } from '../constants';\nimport { userService } from './';\nexport const userActions = {\n  login,\n  register,\n  logout,\n  updateProfile,\n  showError,\n  showNotification,\n  hideError,\n  hideNotification\n};\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n      history.push('/dashboard'); // Redirect to the dashboard after successful login\n    }, error => {\n      dispatch(failure(error));\n    });\n  };\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\nfunction showError(message) {\n  return {\n    type: userConstants.SHOW_ERROR,\n    message\n  };\n}\nfunction showNotification(message) {\n  return {\n    type: userConstants.SHOW_NOTIFICATION,\n    message\n  };\n}\nfunction hideError() {\n  return {\n    type: userConstants.HIDE_ERROR\n  };\n}\nfunction hideNotification() {\n  return {\n    type: userConstants.HIDE_NOTIFICATION\n  };\n}\nfunction register(username, password, role) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.register(username, password, role).then(user => {\n      dispatch(success(user));\n      history.push('/dashboard'); // Redirect to the dashboard after successful registration\n    }, error => {\n      dispatch(failure(error));\n    });\n  };\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\nfunction updateProfile(username, email) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.updateProfile(username, email).then(user => {\n      dispatch(success(user));\n      history.push('/profile'); // Redirect to the profile page after successful update\n    }, error => {\n      dispatch(failure(error));\n    });\n  };\n  function request(user) {\n    return {\n      type: userConstants.UPDATE_PROFILE_REQUEST,\n      user\n    };\n  }\n  function success(user) {\n    return {\n      type: userConstants.UPDATE_PROFILE_SUCCESS,\n      user\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.UPDATE_PROFILE_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"names":["userConstants","userService","userActions","login","register","logout","updateProfile","showError","showNotification","hideError","hideNotification","username","password","dispatch","request","then","user","success","history","push","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","message","SHOW_ERROR","SHOW_NOTIFICATION","HIDE_ERROR","HIDE_NOTIFICATION","role","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","email","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE"],"sources":["D:/GitHub/Tuesday/frontend/src/actions/userActions.js"],"sourcesContent":["import { userConstants } from '../constants';\r\nimport { userService } from './';\r\n\r\nexport const userActions = {\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    showError,\r\n    showNotification,\r\n    hideError,\r\n    hideNotification,\r\n};\r\n\r\nfunction login(username, password) {\r\n    return (dispatch) => {\r\n        dispatch(request({ username }));\r\n\r\n        userService.login(username, password)\r\n            .then(\r\n                (user) => {\r\n                    dispatch(success(user));\r\n                    history.push('/dashboard'); // Redirect to the dashboard after successful login\r\n                },\r\n                (error) => {\r\n                    dispatch(failure(error));\r\n                }\r\n            );\r\n    }\r\n\r\n    function request(user) {\r\n        return { type: userConstants.LOGIN_REQUEST, user };\r\n    }\r\n    function success(user) {\r\n        return { type: userConstants.LOGIN_SUCCESS, user };\r\n    }\r\n    function failure(error) {\r\n        return { type: userConstants.LOGIN_FAILURE, error };\r\n    }\r\n}\r\n\r\nfunction showError(message) {\r\n    return { type: userConstants.SHOW_ERROR, message };\r\n}\r\n\r\nfunction showNotification(message) {\r\n    return { type: userConstants.SHOW_NOTIFICATION, message };\r\n}\r\n\r\nfunction hideError() {\r\n    return { type: userConstants.HIDE_ERROR };\r\n}\r\n\r\nfunction hideNotification() {\r\n    return { type: userConstants.HIDE_NOTIFICATION };\r\n}\r\n\r\nfunction register(username, password, role) {\r\n    return (dispatch) => {\r\n        dispatch(request({ username }));\r\n\r\n        userService.register(username, password, role)\r\n            .then(\r\n                (user) => {\r\n                    dispatch(success(user));\r\n                    history.push('/dashboard'); // Redirect to the dashboard after successful registration\r\n                },\r\n                (error) => {\r\n                    dispatch(failure(error));\r\n                }\r\n            );\r\n    }\r\n\r\n    function request(user) {\r\n        return { type: userConstants.REGISTER_REQUEST, user };\r\n    }\r\n    function success(user) {\r\n        return { type: userConstants.REGISTER_SUCCESS, user };\r\n    }\r\n    function failure(error) {\r\n        return { type: userConstants.REGISTER_FAILURE, error };\r\n    }\r\n}\r\n\r\nfunction updateProfile(username, email) {\r\n    return (dispatch) => {\r\n        dispatch(request({ username }));\r\n\r\n        userService.updateProfile(username, email)\r\n            .then(\r\n                (user) => {\r\n                    dispatch(success(user));\r\n                    history.push('/profile'); // Redirect to the profile page after successful update\r\n                },\r\n                (error) => {\r\n                    dispatch(failure(error));\r\n                }\r\n            );\r\n    }\r\n\r\n    function request(user) {\r\n        return { type: userConstants.UPDATE_PROFILE_REQUEST, user };\r\n    }\r\n    function success(user) {\r\n        return { type: userConstants.UPDATE_PROFILE_SUCCESS, user };\r\n    }\r\n    function failure(error) {\r\n        return { type: userConstants.UPDATE_PROFILE_FAILURE, error };\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
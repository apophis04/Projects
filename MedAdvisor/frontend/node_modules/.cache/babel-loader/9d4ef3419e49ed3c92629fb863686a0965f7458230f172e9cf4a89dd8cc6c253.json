{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// App.js\nimport React from 'react';\nimport { AuthProvider, useAuth } from './web/AuthContext';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './web/Design/Navbar';\nimport Login from './web/cmpts/Login';\nimport Logout from './web/cmpts/Logout';\nimport Patient from './web/cmpts/Patient';\nimport Doctor from './web/Users/Doctor';\nimport Admin from './web/Users/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/patient/*\",\n          element: /*#__PURE__*/_jsxDEV(Patient, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 52\n          }, this),\n          role: \"patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/doctor/*\",\n          element: /*#__PURE__*/_jsxDEV(Doctor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 51\n          }, this),\n          role: \"doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/admin/*\",\n          element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 50\n          }, this),\n          role: \"admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n// PrivateRoute component to handle role-based redirects\n_s(App, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nfunction PrivateRoute({\n  element,\n  role\n}) {\n  _s2();\n  const {\n    user\n  } = useAuth();\n\n  // If the user is logged in and has the correct role, render the element\n  if (user && user.role === role) {\n    return element;\n  }\n  // If the user is not logged in, redirect to the login page\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s2(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c2 = PrivateRoute;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["React","AuthProvider","useAuth","BrowserRouter","Router","Route","Routes","Navigate","Navbar","Login","Logout","Patient","Doctor","Admin","jsxDEV","_jsxDEV","App","_s","user","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","PrivateRoute","role","to","_c","_s2","_c2","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React from 'react';\nimport { AuthProvider, useAuth } from './web/AuthContext';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './web/Design/Navbar';\nimport Login from './web/cmpts/Login';\nimport Logout from './web/cmpts/Logout';\nimport Patient from './web/cmpts/Patient';\nimport Doctor from './web/Users/Doctor';\nimport Admin from './web/Users/Admin';\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <Router>\n      <AuthProvider>\n        <Navbar />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/logout\" element={<Logout />} />\n          <PrivateRoute path=\"/patient/*\" element={<Patient />} role=\"patient\" />\n          <PrivateRoute path=\"/doctor/*\" element={<Doctor />} role=\"doctor\" />\n          <PrivateRoute path=\"/admin/*\" element={<Admin />} role=\"admin\" />\n          <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n      </AuthProvider>\n    </Router>\n  );\n}\n\n// PrivateRoute component to handle role-based redirects\nfunction PrivateRoute({ element, role }) {\n  const { user } = useAuth();\n\n  // If the user is logged in and has the correct role, render the element\n  if (user && user.role === role) {\n    return element;\n  }\n  // If the user is not logged in, redirect to the login page\n  return <Navigate to=\"/login\" />;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
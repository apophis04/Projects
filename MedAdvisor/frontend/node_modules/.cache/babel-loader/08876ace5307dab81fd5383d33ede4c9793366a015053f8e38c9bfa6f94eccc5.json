{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientPosts, replyToPreMedicalForm, createComment, getPatientSymptoms } from '../apiService';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [patientPosts, setPatientPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchPatientPosts();\n  }, []);\n  const fetchPatientPosts = async () => {\n    try {\n      const posts = await getPatientPosts();\n      setPatientPosts(posts);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReply = async (postId, doctorUserId) => {\n    try {\n      await replyToPreMedicalForm(postId);\n      setSelectedDoctorId(doctorUserId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleComment = async (postId, patientUserId) => {\n    try {\n      await createComment({\n        content: commentContent,\n        author: user.id,\n        blog_post: postId,\n        commenter_role: 'doctor',\n        receiver: patientUserId\n      });\n      setCommentContent('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : patientPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient Symptoms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 26\n          }, this), \" \", post.symptoms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 26\n          }, this), \" \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), !post.form_filled_by_doctor && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleReply(post.id, post.patient),\n          children: \"Reply to Pre-Medical Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type your comment\",\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleComment(post.id, post.patient),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"BQlCDbPYpivNUGQfLQ3xEdiAccg=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientPosts","replyToPreMedicalForm","createComment","getPatientSymptoms","Card","Button","jsxDEV","_jsxDEV","DoctorPage","_s","user","selectedDoctorId","setSelectedDoctorId","patientPosts","setPatientPosts","commentContent","setCommentContent","loading","setLoading","fetchPatientPosts","posts","error","console","handleReply","postId","doctorUserId","handleComment","patientUserId","content","author","id","blog_post","commenter_role","receiver","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","style","width","marginBottom","Body","Title","title","Text","symptoms","form_filled_by_doctor","onClick","patient","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Doctor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientPosts, replyToPreMedicalForm, createComment, getPatientSymptoms } from '../apiService';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst DoctorPage = () => {\r\n  const { user } = useAuth();\r\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n  const [patientPosts, setPatientPosts] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchPatientPosts();\r\n  }, []);\r\n\r\n  const fetchPatientPosts = async () => {\r\n    try {\r\n      const posts = await getPatientPosts();\r\n      setPatientPosts(posts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = async (postId, doctorUserId) => {\r\n    try {\r\n      await replyToPreMedicalForm(postId);\r\n      setSelectedDoctorId(doctorUserId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId, patientUserId) => {\r\n    try {\r\n      await createComment({\r\n        content: commentContent,\r\n        author: user.id,\r\n        blog_post: postId,\r\n        commenter_role: 'doctor',\r\n        receiver: patientUserId,\r\n      });\r\n\r\n      setCommentContent('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Patient Posts</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        patientPosts.map((post) => (\r\n          <Card key={post.id} style={{ width: '18rem', marginBottom: '20px' }}>\r\n            <Card.Body>\r\n              <Card.Title>{post.title}</Card.Title>\r\n              <Card.Text><strong>Patient Symptoms:</strong> {post.symptoms}</Card.Text>\r\n              <Card.Text><strong>Post Content:</strong> {post.content}</Card.Text>\r\n              {!post.form_filled_by_doctor && (\r\n                <Button onClick={() => handleReply(post.id, post.patient)}>Reply to Pre-Medical Form</Button>\r\n              )}\r\n              <textarea\r\n                placeholder=\"Type your comment\"\r\n                value={commentContent}\r\n                onChange={(e) => setCommentContent(e.target.value)}\r\n              />\r\n              <Button onClick={() => handleComment(post.id, post.patient)}>Comment</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
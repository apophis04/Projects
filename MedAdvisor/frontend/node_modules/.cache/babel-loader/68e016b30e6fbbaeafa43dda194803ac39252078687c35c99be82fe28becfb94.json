{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Doctor.js\",\n  _s = $RefreshSig$();\n// DoctorPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n  const fetchPatientData = async () => {\n    try {\n      const symptoms = await getPatientSymptoms();\n      const blogPosts = await getPatientBlogPosts();\n      setPatientSymptoms(symptoms);\n      setPatientBlogPosts(blogPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleReply = async (postId, doctorUserId) => {\n    try {\n      await replyToPreMedicalForm(postId);\n      setSelectedDoctorId(doctorUserId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleComment = async (postId, patientUserId) => {\n    try {\n      await createComment({\n        content: commentContent,\n        author: user.id,\n        blog_post: postId,\n        commenter_role: 'doctor',\n        receiver: patientUserId\n      });\n      setCommentContent('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : patientPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient Symptoms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 26\n          }, this), \" \", post.symptoms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 26\n          }, this), \" \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), !post.form_filled_by_doctor && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleReply(post.id, post.patient),\n          children: \"Reply to Pre-Medical Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type your comment\",\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleComment(post.id, post.patient),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"rOakNe3DyKvBtN/0yE27GNThJtU=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientSymptoms","getPatientBlogPosts","replyToPreMedicalForm","createComment","jsxDEV","_jsxDEV","DoctorPage","_s","user","selectedDoctorId","setSelectedDoctorId","patientSymptoms","setPatientSymptoms","patientBlogPosts","setPatientBlogPosts","commentContent","setCommentContent","fetchPatientData","symptoms","blogPosts","error","console","handleReply","postId","doctorUserId","handleComment","patientUserId","content","author","id","blog_post","commenter_role","receiver","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","patientPosts","map","post","Card","style","width","marginBottom","Body","Title","title","Text","form_filled_by_doctor","Button","onClick","patient","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Doctor.js"],"sourcesContent":["// DoctorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\r\n\r\nconst DoctorPage = () => {\r\n  const { user } = useAuth();\r\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\r\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatientData();\r\n  }, []);\r\n\r\n  const fetchPatientData = async () => {\r\n    try {\r\n      const symptoms = await getPatientSymptoms();\r\n      const blogPosts = await getPatientBlogPosts();\r\n\r\n      setPatientSymptoms(symptoms);\r\n      setPatientBlogPosts(blogPosts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleReply = async (postId, doctorUserId) => {\r\n    try {\r\n      await replyToPreMedicalForm(postId);\r\n      setSelectedDoctorId(doctorUserId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId, patientUserId) => {\r\n    try {\r\n      await createComment({\r\n        content: commentContent,\r\n        author: user.id,\r\n        blog_post: postId,\r\n        commenter_role: 'doctor',\r\n        receiver: patientUserId,\r\n      });\r\n\r\n      setCommentContent('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Patient Posts</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        patientPosts.map((post) => (\r\n          <Card key={post.id} style={{ width: '18rem', marginBottom: '20px' }}>\r\n            <Card.Body>\r\n              <Card.Title>{post.title}</Card.Title>\r\n              <Card.Text><strong>Patient Symptoms:</strong> {post.symptoms}</Card.Text>\r\n              <Card.Text><strong>Post Content:</strong> {post.content}</Card.Text>\r\n              {!post.form_filled_by_doctor && (\r\n                <Button onClick={() => handleReply(post.id, post.patient)}>Reply to Pre-Medical Form</Button>\r\n              )}\r\n              <textarea\r\n                placeholder=\"Type your comment\"\r\n                value={commentContent}\r\n                onChange={(e) => setCommentContent(e.target.value)}\r\n              />\r\n              <Button onClick={() => handleComment(post.id, post.patient)}>Comment</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Patient.js\",\n  _s = $RefreshSig$();\n// Doctor.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientBlogPosts, replyToPreMedicalForm, createComment, getPatientSymptoms, getComments } from '../apiService';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [patientData, setPatientData] = useState([]);\n  const [commentContents, setCommentContents] = useState({});\n  const [selectedBlogPostId, setSelectedBlogPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState(false);\n  useEffect(() => {\n    fetchPatientData();\n  }, []);\n  useEffect(() => {\n    if (selectedBlogPostId) {\n      fetchComments(selectedBlogPostId);\n    }\n  }, [selectedBlogPostId]);\n  const fetchPatientData = async () => {\n    try {\n      const [blogPosts, symptomsData] = await Promise.all([getPatientBlogPosts(), getPatientSymptoms()]);\n      const mergedData = blogPosts.map((post, index) => ({\n        ...post,\n        symptoms: symptomsData[index] ? symptomsData[index].symptoms : null\n      }));\n      setPatientData(mergedData);\n      const initialCommentContents = {};\n      mergedData.forEach(post => {\n        initialCommentContents[post.id] = '';\n      });\n      setCommentContents(initialCommentContents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // ... (unchanged code)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Patient Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: patientData.filter(post => post.patient === user.id) // Display only posts created by the logged-in patient\n      .map(post => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"light\",\n          text: \"dark\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient Symptoms:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 30\n              }, this), \" \", post.symptoms]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Post Content:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 30\n              }, this), \" \", post.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), !post.form_filled_by_doctor && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              onClick: () => handleReply(post.id, post.patient),\n              children: \"Reply to Pre-Medical Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              onClick: () => handleShowComments(post.id),\n              children: \"Show Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control mt-3\",\n              placeholder: \"Type your comment\",\n              value: commentContents[post.id],\n              onChange: e => setCommentContents(prevContents => ({\n                ...prevContents,\n                [post.id]: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              className: \"mt-3\",\n              onClick: () => handleComment(post.id, post.patient),\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"sgTdTDtAXnQ7CSrg+InY5yfy2bM=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientBlogPosts","replyToPreMedicalForm","createComment","getPatientSymptoms","getComments","Card","Button","Row","Col","Offcanvas","jsxDEV","_jsxDEV","DoctorPage","_s","user","selectedDoctorId","setSelectedDoctorId","patientData","setPatientData","commentContents","setCommentContents","selectedBlogPostId","setSelectedBlogPostId","comments","setComments","showComments","setShowComments","fetchPatientData","fetchComments","blogPosts","symptomsData","Promise","all","mergedData","map","post","index","symptoms","initialCommentContents","forEach","id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","filter","patient","bg","text","Body","Title","title","Text","content","form_filled_by_doctor","variant","onClick","handleReply","handleShowComments","placeholder","value","onChange","e","prevContents","target","handleComment","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Patient.js"],"sourcesContent":["// Doctor.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientBlogPosts, replyToPreMedicalForm, createComment, getPatientSymptoms, getComments } from '../apiService';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\n\r\nconst DoctorPage = () => {\r\n    const { user } = useAuth();\r\n    const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n    const [patientData, setPatientData] = useState([]);\r\n    const [commentContents, setCommentContents] = useState({});\r\n    const [selectedBlogPostId, setSelectedBlogPostId] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [showComments, setShowComments] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      fetchPatientData();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      if (selectedBlogPostId) {\r\n        fetchComments(selectedBlogPostId);\r\n      }\r\n    }, [selectedBlogPostId]);\r\n\r\n  const fetchPatientData = async () => {\r\n    try {\r\n      const [blogPosts, symptomsData] = await Promise.all([getPatientBlogPosts(), getPatientSymptoms()]);\r\n      const mergedData = blogPosts.map((post, index) => ({\r\n        ...post,\r\n        symptoms: symptomsData[index] ? symptomsData[index].symptoms : null,\r\n      }));\r\n\r\n      setPatientData(mergedData);\r\n      const initialCommentContents = {};\r\n      mergedData.forEach((post) => {\r\n        initialCommentContents[post.id] = '';\r\n      });\r\n      setCommentContents(initialCommentContents);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // ... (unchanged code)\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"mb-4\">Patient Posts</h2>\r\n      <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n        {patientData\r\n          .filter((post) => post.patient === user.id) // Display only posts created by the logged-in patient\r\n          .map((post) => (\r\n            <Col key={post.id} className=\"mb-4\">\r\n              <Card bg=\"light\" text=\"dark\">\r\n                <Card.Body>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Text><strong>Patient Symptoms:</strong> {post.symptoms}</Card.Text>\r\n                  <Card.Text><strong>Post Content:</strong> {post.content}</Card.Text>\r\n                  {!post.form_filled_by_doctor && (\r\n                    <Button variant=\"outline-primary\" onClick={() => handleReply(post.id, post.patient)}>\r\n                      Reply to Pre-Medical Form\r\n                    </Button>\r\n                  )}\r\n                  <Button variant=\"outline-secondary\" onClick={() => handleShowComments(post.id)}>\r\n                    Show Comments\r\n                  </Button>\r\n                  <textarea\r\n                    className=\"form-control mt-3\"\r\n                    placeholder=\"Type your comment\"\r\n                    value={commentContents[post.id]}\r\n                    onChange={(e) => setCommentContents((prevContents) => ({\r\n                      ...prevContents,\r\n                      [post.id]: e.target.value,\r\n                    }))}\r\n                  />\r\n                  <Button variant=\"outline-success\" className=\"mt-3\" onClick={() => handleComment(post.id, post.patient)}>\r\n                    Comment\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n\r\n      {/* ... (unchanged code) */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\web_components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport CommentForm from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormContent() {\n  _s();\n  const [formData, setFormData] = useState([]);\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [selectedForm, setSelectedForm] = useState(null);\n  const [commentData, setCommentData] = useState(null); // Define commentData state\n\n  const handleCommentButtonClick = formItem => {\n    setSelectedForm(formItem);\n    setShowCommentForm(true);\n    // Set the author and blog_post fields when making the POST request\n    setCommentData({\n      author: formItem.author.username,\n      // Assuming formItem.author contains the user object\n      blog_post: formItem.id\n    });\n  };\n  const onHideCommentForm = () => {\n    setShowCommentForm(false);\n  };\n  const handleCommentSubmit = comment => {\n    // Handle the submitted comment data here, e.g., update the UI with the new comment\n    // You can make an API request to retrieve comments for the selected form and update the state accordingly.\n    // Implement this function based on your application's needs.\n  };\n  return /*#__PURE__*/_jsxDEV(CardGroup, {\n    children: [formData.map((formItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem',\n        margin: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: formItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Full Name: \", formItem.full_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 46\n          }, this), \"Phone Number: \", formItem.phone_number, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 52\n          }, this), \"Gender: \", formItem.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 40\n          }, this), \"Symptoms: \", formItem.symptoms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleCommentButtonClick(formItem),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CommentForm, {\n      show: showCommentForm,\n      onHide: onHideCommentForm,\n      onCommentSubmit: handleCommentSubmit,\n      commentData: commentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(FormContent, \"2VvN942FFwLv31eymKPXKtsc1qQ=\");\n_c = FormContent;\nexport default FormContent;\nvar _c;\n$RefreshReg$(_c, \"FormContent\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardGroup","Button","axios","CommentForm","jsxDEV","_jsxDEV","FormContent","_s","formData","setFormData","showCommentForm","setShowCommentForm","selectedForm","setSelectedForm","commentData","setCommentData","handleCommentButtonClick","formItem","author","username","blog_post","id","onHideCommentForm","handleCommentSubmit","comment","children","map","index","style","width","margin","Body","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Text","full_name","phone_number","gender","symptoms","variant","onClick","show","onHide","onCommentSubmit","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/components/web_components/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport CommentForm from './Comment';\r\n\r\nfunction FormContent() {\r\n  const [formData, setFormData] = useState([]);\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const [selectedForm, setSelectedForm] = useState(null);\r\n  const [commentData, setCommentData] = useState(null); // Define commentData state\r\n\r\n\r\n  const handleCommentButtonClick = (formItem) => {\r\n    setSelectedForm(formItem);\r\n    setShowCommentForm(true);\r\n    // Set the author and blog_post fields when making the POST request\r\n    setCommentData({\r\n      author: formItem.author.username, // Assuming formItem.author contains the user object\r\n      blog_post: formItem.id,\r\n    });\r\n  };\r\n  const onHideCommentForm = () => {\r\n    setShowCommentForm(false);\r\n  };\r\n\r\n  const handleCommentSubmit = (comment) => {\r\n    // Handle the submitted comment data here, e.g., update the UI with the new comment\r\n    // You can make an API request to retrieve comments for the selected form and update the state accordingly.\r\n    // Implement this function based on your application's needs.\r\n  };\r\n\r\n  return (\r\n    <CardGroup>\r\n      {formData.map((formItem, index) => (\r\n        <Card key={index} style={{ width: '18rem', margin: '10px' }}>\r\n          <Card.Body>\r\n            <Card.Title>{formItem.title}</Card.Title>\r\n            <Card.Text>\r\n              Full Name: {formItem.full_name}<br />\r\n              Phone Number: {formItem.phone_number}<br />\r\n              Gender: {formItem.gender}<br />\r\n              Symptoms: {formItem.symptoms}\r\n            </Card.Text>\r\n            <Button variant=\"primary\" onClick={() => handleCommentButtonClick(formItem)}>\r\n              Comment\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n      <CommentForm show={showCommentForm} onHide={onHideCommentForm} onCommentSubmit={handleCommentSubmit} commentData={commentData} />\r\n    </CardGroup>\r\n  );\r\n}\r\n\r\nexport default FormContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
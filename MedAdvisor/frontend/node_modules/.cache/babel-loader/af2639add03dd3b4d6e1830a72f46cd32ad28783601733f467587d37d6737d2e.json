{"ast":null,"code":"// apiService.js\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = true;\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/';\nconst apiService = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const setAuthToken = token => {\n  if (token) {\n    apiService.defaults.headers.common['Authorization'] = `Token ${token}`;\n  } else {\n    delete apiService.defaults.headers.common['Authorization'];\n  }\n};\nexport const login = async (username, password) => {\n  try {\n    const response = await apiService.post('/login/', {\n      username,\n      password\n    });\n    const token = response.data.token;\n    setAuthToken(token);\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error.response.data;\n  }\n};\nexport const getUserDetails = async () => {\n  try {\n    const response = await apiService.get('/user-details/');\n    return response.data;\n  } catch (error) {}\n};\nexport const createBlogPost = async data => {\n  try {\n    const response = await apiService.post('/create-blog-post/', data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const fillPreMedicalForm = async data => {\n  try {\n    const response = await apiService.post('/fill-pre-medical-form/', data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const getPatientSymptoms = async () => {\n  try {\n    const response = await apiService.get('/get-pre-medical-form/');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const getPatientBlogPosts = async () => {\n  try {\n    const response = await apiService.get('/api/blog-posts/');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const replyToPreMedicalForm = async formId => {\n  try {\n    const response = await apiService.patch(`/reply-to-pre-medical-form/${formId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const createComment = async data => {\n  try {\n    const response = await apiService.post('/create-comment/', data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const getMessages = async () => {\n  try {\n    const response = await apiService.get('/get-messages/');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const createMessage = async data => {\n  try {\n    const response = await apiService.post('/send-message/', data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const getComments = async blogPostId => {\n  try {\n    const response = await apiService.get(`/get-comments/${blogPostId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const register = async (username, email, password, role) => {\n  try {\n    const response = await apiService.post('/register/', {\n      username,\n      email,\n      password,\n      role\n    }); // Include 'email'\n    const token = response.data.token;\n    setAuthToken(token);\n    return response.data;\n  } catch (error) {\n    console.error('Register error:', error);\n    throw error.response.data;\n  }\n};\nexport const getAllUsers = async () => {\n  try {\n    const response = await apiService.get('/get-all-users/');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const promoteUser = async userId => {\n  try {\n    const response = await apiService.post(`/promote-user/${userId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const deleteUser = async userId => {\n  try {\n    const response = await apiService.delete(`/delete-user/${userId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const deleteBlogPost = async blogPostId => {\n  try {\n    const response = await apiService.delete(`/delete-blogpost/${blogPostId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const deletePreMedicalForm = async formId => {\n  try {\n    const response = await apiService.delete(`/delete-premedicalform/${formId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const deleteComment = async commentId => {\n  try {\n    const response = await apiService.delete(`/delete-comment/${commentId}/`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","BASE_URL","process","env","REACT_APP_API_BASE_URL","apiService","create","baseURL","headers","setAuthToken","token","common","login","username","password","response","post","data","error","console","getUserDetails","get","createBlogPost","fillPreMedicalForm","getPatientSymptoms","getPatientBlogPosts","replyToPreMedicalForm","formId","patch","createComment","getMessages","createMessage","getComments","blogPostId","register","email","role","getAllUsers","promoteUser","userId","deleteUser","delete","deleteBlogPost","deletePreMedicalForm","deleteComment","commentId"],"sources":["D:/GitHub/Tuesday/frontend/src/web/apiService.js"],"sourcesContent":["// apiService.js\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\naxios.defaults.withCredentials = true;\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/';\r\n\r\nconst apiService = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    apiService.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n  } else {\r\n    delete apiService.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await apiService.post('/login/', { username, password });\r\n    const token = response.data.token;\r\n    setAuthToken(token);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const getUserDetails = async () => {\r\n  try {\r\n    const response = await apiService.get('/user-details/');\r\n    return response.data;\r\n  } catch (error) {\r\n  }\r\n};\r\n\r\n\r\nexport const createBlogPost = async (data) => {\r\n    try {\r\n      const response = await apiService.post('/create-blog-post/', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const fillPreMedicalForm = async (data) => {\r\n    try {\r\n      const response = await apiService.post('/fill-pre-medical-form/', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const getPatientSymptoms = async () => {\r\n    try {\r\n      const response = await apiService.get('/get-pre-medical-form/');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const getPatientBlogPosts = async () => {\r\n    try {\r\n      const response = await apiService.get('/api/blog-posts/');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  export const replyToPreMedicalForm = async (formId) => {\r\n    try {\r\n      const response = await apiService.patch(`/reply-to-pre-medical-form/${formId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const createComment = async (data) => {\r\n    try {\r\n      const response = await apiService.post('/create-comment/', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\nexport const getMessages = async () => {\r\n  try {\r\n    const response = await apiService.get('/get-messages/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createMessage = async (data) => {\r\n  try {\r\n    const response = await apiService.post('/send-message/', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getComments = async (blogPostId) => {\r\n  try {\r\n    const response = await apiService.get(`/get-comments/${blogPostId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}; \r\n\r\n\r\nexport const register = async (username, email, password, role) => {\r\n  try {\r\n    const response = await apiService.post('/register/', { username, email, password, role }); // Include 'email'\r\n    const token = response.data.token;\r\n    setAuthToken(token);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Register error:', error);\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const response = await apiService.get('/get-all-users/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const promoteUser = async (userId) => {\r\n  try {\r\n    const response = await apiService.post(`/promote-user/${userId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const deleteUser = async (userId) => {\r\n  try {\r\n    const response = await apiService.delete(`/delete-user/${userId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBlogPost = async (blogPostId) => {\r\n  try {\r\n    const response = await apiService.delete(`/delete-blogpost/${blogPostId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deletePreMedicalForm = async (formId) => {\r\n  try {\r\n    const response = await apiService.delete(`/delete-premedicalform/${formId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComment = async (commentId) => {\r\n  try {\r\n    const response = await apiService.delete(`/delete-comment/${commentId}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\Pre_Medical.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientForm({\n  onSubmit\n}) {\n  _s();\n  const [patientData, setPatientData] = useState({\n    symptoms: []\n  });\n  const handleChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    const updatedSymptoms = checked ? [...patientData.symptoms, value] : patientData.symptoms.filter(symptom => symptom !== value);\n    setPatientData({\n      ...patientData,\n      symptoms: updatedSymptoms\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (typeof onSubmit === 'function') {\n      onSubmit(patientData);\n    }\n\n    // Reset the form or perform any other actions as needed\n    setPatientData({\n      symptoms: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Restlessness\",\n        name: \"symptoms\",\n        value: \"Restlessness\",\n        checked: patientData.symptoms.includes('Restlessness'),\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Uncontrollable feelings of worry\",\n        name: \"symptoms\",\n        value: \"Uncontrollable feelings of worry\",\n        checked: patientData.symptoms.includes('Uncontrollable feelings of worry'),\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Increased irritability\",\n        name: \"symptoms\",\n        value: \"Increased irritability\",\n        checked: patientData.symptoms.includes('Increased irritability'),\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientForm, \"M94xcAj05dxCu2wNKD0tq494xJI=\");\n_c = PatientForm;\nexport default PatientForm;\nvar _c;\n$RefreshReg$(_c, \"PatientForm\");","map":{"version":3,"names":["React","useState","Form","Button","jsxDEV","_jsxDEV","PatientForm","onSubmit","_s","patientData","setPatientData","symptoms","handleChange","e","value","checked","target","updatedSymptoms","filter","symptom","handleSubmit","preventDefault","children","Group","className","Label","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","label","name","includes","onChange","variant","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/components/Pre_Medical.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction PatientForm({ onSubmit }) {\r\n  const [patientData, setPatientData] = useState({\r\n    symptoms: [],\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    const updatedSymptoms = checked\r\n      ? [...patientData.symptoms, value]\r\n      : patientData.symptoms.filter((symptom) => symptom !== value);\r\n    setPatientData({ ...patientData, symptoms: updatedSymptoms });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (typeof onSubmit === 'function') {\r\n      onSubmit(patientData);\r\n    }\r\n\r\n    // Reset the form or perform any other actions as needed\r\n    setPatientData({\r\n      symptoms: [],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Symptoms</Form.Label>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Restlessness\"\r\n          name=\"symptoms\"\r\n          value=\"Restlessness\"\r\n          checked={patientData.symptoms.includes('Restlessness')}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Uncontrollable feelings of worry\"\r\n          name=\"symptoms\"\r\n          value=\"Uncontrollable feelings of worry\"\r\n          checked={patientData.symptoms.includes('Uncontrollable feelings of worry')}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Increased irritability\"\r\n          name=\"symptoms\"\r\n          value=\"Increased irritability\"\r\n          checked={patientData.symptoms.includes('Increased irritability')}\r\n          onChange={handleChange}\r\n        />\r\n        {/* Add the rest of your symptoms here */}\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default PatientForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
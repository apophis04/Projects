{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Login from '../Routes/Login'; // Import your Login component\nimport Register from '..Routes/Register'; // Import your Register component\nimport PatientDashboard from './PatientDashboard'; // Import your PatientDashboard component\nimport DoctorDashboard from './DoctorDashboard'; // Import your DoctorDashboard component\nimport AdminDashboard from './AdminDashboard'; // Import your AdminDashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = userData => {\n    // Simulate a login action and set the user data\n    const userRole = getUserRole(); // Replace with your logic to get the user's role\n    setUser({\n      ...userData,\n      role: userRole\n    });\n    navigate(`/${userRole}-dashboard`); // Redirect to the respective dashboard based on the role\n  };\n\n  const handleLogout = () => {\n    // Simulate a logout action\n    setUser(null);\n    navigate('/login'); // Redirect to the login page after logout\n  };\n\n  const getUserRole = () => {\n    // Implement your logic to get the user's role here, e.g., from user data or API\n    // Replace this with your actual logic\n    return 'patient'; // Replace with 'doctor', 'admin', or actual role\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        expand: \"lg\",\n        className: \"bg-body-tertiary\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"/\",\n            children: \"Your App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              className: \"me-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), user ? /*#__PURE__*/_jsxDEV(Navbar.Text, {\n              children: [\"Signed in as: \", user.name, /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: handleLogout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => navigate('/login'),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient-dashboard\",\n          element: user && user.role === 'patient' ? /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctor-dashboard\",\n          element: user && user.role === 'doctor' ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin-dashboard\",\n          element: user && user.role === 'admin' ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6IF8oi2v+FFFMVJXFQinFj68c40=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","useNavigate","Container","Nav","Navbar","Button","Login","Register","PatientDashboard","DoctorDashboard","AdminDashboard","jsxDEV","_jsxDEV","App","_s","user","setUser","navigate","handleLogin","userData","userRole","getUserRole","role","handleLogout","children","expand","className","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","Text","name","variant","onClick","path","element","onLogin","onRegister","to","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Login from '../Routes/Login'; // Import your Login component\r\nimport Register from '..Routes/Register'; // Import your Register component\r\nimport PatientDashboard from './PatientDashboard'; // Import your PatientDashboard component\r\nimport DoctorDashboard from './DoctorDashboard'; // Import your DoctorDashboard component\r\nimport AdminDashboard from './AdminDashboard'; // Import your AdminDashboard component\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (userData) => {\r\n    // Simulate a login action and set the user data\r\n    const userRole = getUserRole(); // Replace with your logic to get the user's role\r\n    setUser({ ...userData, role: userRole });\r\n    navigate(`/${userRole}-dashboard`); // Redirect to the respective dashboard based on the role\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Simulate a logout action\r\n    setUser(null);\r\n    navigate('/login'); // Redirect to the login page after logout\r\n  };\r\n\r\n  const getUserRole = () => {\r\n    // Implement your logic to get the user's role here, e.g., from user data or API\r\n    // Replace this with your actual logic\r\n    return 'patient'; // Replace with 'doctor', 'admin', or actual role\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n          <Container>\r\n            <Navbar.Brand href=\"/\">Your App</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"me-auto\">\r\n                {/* Add navigation links for other pages */}\r\n              </Nav>\r\n              {user ? (\r\n                <Navbar.Text>\r\n                  Signed in as: {user.name}\r\n                  <Button variant=\"link\" onClick={handleLogout}>\r\n                    Logout\r\n                  </Button>\r\n                </Navbar.Text>\r\n              ) : (\r\n                <Button variant=\"primary\" onClick={() => navigate('/login')}>\r\n                  Login\r\n                </Button>\r\n              )}\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register onRegister={handleLogin} />} />\r\n          <Route\r\n            path=\"/patient-dashboard\"\r\n            element={\r\n              user && user.role === 'patient' ? (\r\n                <PatientDashboard user={user} />\r\n              ) : (\r\n                <Navigate to=\"/\" />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/doctor-dashboard\"\r\n            element={\r\n              user && user.role === 'doctor' ? (\r\n                <DoctorDashboard user={user} />\r\n              ) : (\r\n                <Navigate to=\"/\" />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin-dashboard\"\r\n            element={\r\n              user && user.role === 'admin' ? (\r\n                <AdminDashboard user={user} />\r\n              ) : (\r\n                <Navigate to=\"/\" />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
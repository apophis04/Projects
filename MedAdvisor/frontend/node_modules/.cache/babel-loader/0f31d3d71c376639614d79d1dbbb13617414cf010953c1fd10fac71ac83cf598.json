{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\PatientDashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PatientDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postContent: ''\n    };\n    this.handlePostChange = this.handlePostChange.bind(this);\n    this.handlePostSubmit = this.handlePostSubmit.bind(this);\n  }\n  handlePostChange(e) {\n    this.setState({\n      postContent: e.target.value\n    });\n  }\n  handlePostSubmit(e) {\n    e.preventDefault();\n    // Handle creating a post here and sending it to the server\n    // Include the pre_medical_form attachment if needed\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handlePostSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: this.state.postContent,\n            onChange: this.handlePostChange,\n            placeholder: \"Write your post here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Direct Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction mapStateToProps(state) {\n  // Include state information you need from Redux\n  return {};\n}\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\nexport { connectedPatientDashboard as PatientDashboard };","map":{"version":3,"names":["React","Component","connect","jsxDEV","_jsxDEV","PatientDashboard","constructor","props","state","postContent","handlePostChange","bind","handlePostSubmit","e","setState","target","value","preventDefault","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","onChange","placeholder","type","mapStateToProps","connectedPatientDashboard"],"sources":["D:/GitHub/Tuesday/frontend/src/components/PatientDashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PatientDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postContent: '',\r\n        };\r\n\r\n        this.handlePostChange = this.handlePostChange.bind(this);\r\n        this.handlePostSubmit = this.handlePostSubmit.bind(this);\r\n    }\r\n\r\n    handlePostChange(e) {\r\n        this.setState({ postContent: e.target.value });\r\n    }\r\n\r\n    handlePostSubmit(e) {\r\n        e.preventDefault();\r\n        // Handle creating a post here and sending it to the server\r\n        // Include the pre_medical_form attachment if needed\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Patient Dashboard</h2>\r\n                <div>\r\n                    <h3>Create a Post</h3>\r\n                    <form onSubmit={this.handlePostSubmit}>\r\n                        <textarea\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            value={this.state.postContent}\r\n                            onChange={this.handlePostChange}\r\n                            placeholder=\"Write your post here...\"\r\n                        ></textarea>\r\n                        {/* Allow attachment of pre_medical_form here */}\r\n                        <button type=\"submit\">Create Post</button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h3>Your Posts</h3>\r\n                    {/* Display patient's posts with doctor comments */}\r\n                </div>\r\n                <div>\r\n                    <h3>Direct Messages</h3>\r\n                    {/* Implement a direct messaging component for patient-doctor communication */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    // Include state information you need from Redux\r\n    return {};\r\n}\r\n\r\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\r\nexport { connectedPatientDashboard as PatientDashboard };\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,gBAAgB,SAASJ,SAAS,CAAC;EACrCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,WAAW,EAAE;IACjB,CAAC;IAED,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAC;EAC5D;EAEAD,gBAAgBA,CAACG,CAAC,EAAE;IAChB,IAAI,CAACC,QAAQ,CAAC;MAAEL,WAAW,EAAEI,CAAC,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EAClD;EAEAJ,gBAAgBA,CAACC,CAAC,EAAE;IAChBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB;IACA;EACJ;;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACId,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BnB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBnB,OAAA;UAAMoB,QAAQ,EAAE,IAAI,CAACZ,gBAAiB;UAAAO,QAAA,gBAClCf,OAAA;YACIqB,IAAI,EAAC,GAAG;YACRC,IAAI,EAAC,IAAI;YACTV,KAAK,EAAE,IAAI,CAACR,KAAK,CAACC,WAAY;YAC9BkB,QAAQ,EAAE,IAAI,CAACjB,gBAAiB;YAChCkB,WAAW,EAAC;UAAyB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eAEZnB,OAAA;YAAQyB,IAAI,EAAC,QAAQ;YAAAV,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNnB,OAAA;QAAAe,QAAA,eACIf,OAAA;UAAAe,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CAAC,eACNnB,OAAA;QAAAe,QAAA,eACIf,OAAA;UAAAe,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAEA,SAASO,eAAeA,CAACtB,KAAK,EAAE;EAC5B;EACA,OAAO,CAAC,CAAC;AACb;AAEA,MAAMuB,yBAAyB,GAAG7B,OAAO,CAAC4B,eAAe,CAAC,CAACzB,gBAAgB,CAAC;AAC5E,SAAS0B,yBAAyB,IAAI1B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
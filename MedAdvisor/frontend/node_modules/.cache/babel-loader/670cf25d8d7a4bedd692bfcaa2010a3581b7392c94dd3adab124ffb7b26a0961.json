{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\cmpts\\\\Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getMessages, createMessage } from '../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  receiverId\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Fetch messages when the component mounts and whenever the receiver changes\n    fetchMessages();\n  }, [receiverId]);\n  const fetchMessages = async () => {\n    try {\n      const receivedMessages = await getMessages(receiverId);\n      setMessages(receivedMessages);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleMessage = async () => {\n    try {\n      await createMessage({\n        content: newMessage,\n        sender: user.id,\n        receiver: receiverId\n      });\n      // Fetch messages again after sending a new message\n      fetchMessages();\n      setNewMessage('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '200px',\n        overflowY: 'scroll',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender_username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", message.content]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your message\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"3FBbagjpE56yrcaN7KuSVTVqhHE=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getMessages","createMessage","jsxDEV","_jsxDEV","Chat","receiverId","_s","user","messages","setMessages","newMessage","setNewMessage","fetchMessages","receivedMessages","error","console","handleMessage","content","sender","id","receiver","children","style","height","overflowY","border","padding","map","message","sender_username","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/cmpts/Chat.js"],"sourcesContent":["// Chat.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getMessages, createMessage } from '../apiService';\r\n\r\nconst Chat = ({ receiverId }) => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch messages when the component mounts and whenever the receiver changes\r\n    fetchMessages();\r\n  }, [receiverId]);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const receivedMessages = await getMessages(receiverId);\r\n      setMessages(receivedMessages);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleMessage = async () => {\r\n    try {\r\n      await createMessage({ content: newMessage, sender: user.id, receiver: receiverId });\r\n      // Fetch messages again after sending a new message\r\n      fetchMessages();\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: '200px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\r\n        {messages.map((message) => (\r\n          <div key={message.id}>\r\n            <strong>{message.sender_username}:</strong> {message.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <textarea\r\n        placeholder=\"Type your message\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleMessage}>Send Message</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
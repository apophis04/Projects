{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  allowedRoles,\n  loggedIn,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  ...rest,\n  render: props => {\n    if (!loggedIn) {\n      // Not logged in, redirect to login\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 24\n      }, this);\n    } else if (!allowedRoles.includes(props.userRole)) {\n      // Logged in but not allowed, redirect to an error page or the home page\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n_c = PrivateRoute;\nexport { PrivateRoute };\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","PrivateRoute","component","Component","allowedRoles","loggedIn","rest","render","props","to","fileName","_jsxFileName","lineNumber","columnNumber","includes","userRole","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, allowedRoles, loggedIn, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => {\r\n            if (!loggedIn) {\r\n                // Not logged in, redirect to login\r\n                return <Redirect to=\"/login\" />;\r\n            } else if (!allowedRoles.includes(props.userRole)) {\r\n                // Logged in but not allowed, redirect to an error page or the home page\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\nexport { PrivateRoute };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAEC,YAAY;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,kBAC3EN,OAAA,CAACH,KAAK;EAAA,GACES,IAAI;EACRC,MAAM,EAAGC,KAAK,IAAK;IACf,IAAI,CAACH,QAAQ,EAAE;MACX;MACA,oBAAOL,OAAA,CAACF,QAAQ;QAACW,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnC,CAAC,MAAM,IAAI,CAACT,YAAY,CAACU,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,EAAE;MAC/C;MACA,oBAAOf,OAAA,CAACF,QAAQ;QAACW,EAAE,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9B;IACA,oBAAOb,OAAA,CAACG,SAAS;MAAA,GAAKK;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC;AAAE;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACJ;AAACG,EAAA,GAdIf,YAAY;AAgBlB,SAASA,YAAY;AAAG,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
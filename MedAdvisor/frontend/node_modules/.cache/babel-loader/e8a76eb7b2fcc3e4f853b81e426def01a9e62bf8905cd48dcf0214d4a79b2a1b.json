{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { login, logout, getUserDetails } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const handleLogin = async (username, password) => {\n    try {\n      // Make API call for login\n      const response = await login(username, password);\n\n      // Ensure the API response structure matches your expectations\n      const {\n        token,\n        user_id\n      } = response;\n\n      // Update user state with the received data\n      setUser({\n        token,\n        user_id\n      });\n\n      // Other logic if needed\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      // Make API call for logout\n      await logout();\n      setUser(null); // Update user state on logout\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  const fetchUserDetails = async () => {\n    try {\n      // Make API call to fetch user details\n      const data = await getUserDetails();\n      setUser(data);\n    } catch (error) {\n      console.error('Fetch user details failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      handleLogin,\n      handleLogout,\n      fetchUserDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","login","logout","getUserDetails","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","handleLogin","username","password","response","token","user_id","error","console","handleLogout","fetchUserDetails","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { login, logout, getUserDetails } from './apiService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      // Make API call for login\r\n      const response = await login(username, password);\r\n\r\n      // Ensure the API response structure matches your expectations\r\n      const { token, user_id } = response;\r\n\r\n      // Update user state with the received data\r\n      setUser({\r\n        token,\r\n        user_id,\r\n      });\r\n\r\n      // Other logic if needed\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Make API call for logout\r\n      await logout();\r\n      setUser(null); // Update user state on logout\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserDetails = async () => {\r\n    try {\r\n      // Make API call to fetch user details\r\n      const data = await getUserDetails();\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.error('Fetch user details failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, handleLogin, handleLogout, fetchUserDetails }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,KAAK,EAAEC,MAAM,EAAEC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAChD,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACY,QAAQ,EAAEC,QAAQ,CAAC;;MAEhD;MACA,MAAM;QAAEE,KAAK;QAAEC;MAAQ,CAAC,GAAGF,QAAQ;;MAEnC;MACAJ,OAAO,CAAC;QACNK,KAAK;QACLC;MACF,CAAC,CAAC;;MAEF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMlB,MAAM,CAAC,CAAC;MACdS,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAMC,IAAI,GAAG,MAAMnB,cAAc,CAAC,CAAC;MACnCQ,OAAO,CAACW,IAAI,CAAC;IACf,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEE,WAAW;MAAEQ,YAAY;MAAEC;IAAiB,CAAE;IAAAb,QAAA,EAChFA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAhDWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAkDzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMhC,UAAU,CAACO,WAAW,CAAC;AAAA;AAACyB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
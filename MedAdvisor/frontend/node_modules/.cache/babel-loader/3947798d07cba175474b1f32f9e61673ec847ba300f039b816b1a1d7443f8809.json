{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\DoctorDashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DoctorDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postComments: '' // Comment content for a patient's post\n    };\n\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n  handleCommentChange(e) {\n    this.setState({\n      postComments: e.target.value\n    });\n  }\n  handleCommentSubmit(e, postId) {\n    e.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    // Dispatch an action to send the comment to the server for the specified post\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Doctor Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"View Patient Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Patient's Post Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => this.handleCommentSubmit(e, postId),\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"4\",\n                cols: \"50\",\n                value: this.state.postComments,\n                onChange: this.handleCommentChange,\n                placeholder: \"Write your comment here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Direct Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction mapStateToProps(state) {\n  // Include state information you need from Redux\n  return {};\n}\nconst connectedDoctorDashboard = connect(mapStateToProps)(DoctorDashboard);\nexport { connectedDoctorDashboard as DoctorDashboard };","map":{"version":3,"names":["React","Component","connect","jsxDEV","_jsxDEV","DoctorDashboard","constructor","props","state","postComments","handleCommentChange","bind","handleCommentSubmit","e","setState","target","value","postId","preventDefault","dispatch","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","onChange","placeholder","type","mapStateToProps","connectedDoctorDashboard"],"sources":["D:/GitHub/Tuesday/frontend/src/components/DoctorDashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass DoctorDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postComments: '', // Comment content for a patient's post\r\n        };\r\n\r\n        this.handleCommentChange = this.handleCommentChange.bind(this);\r\n        this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\r\n    }\r\n\r\n    handleCommentChange(e) {\r\n        this.setState({ postComments: e.target.value });\r\n    }\r\n\r\n    handleCommentSubmit(e, postId) {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        // Dispatch an action to send the comment to the server for the specified post\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Doctor Dashboard</h2>\r\n                <div>\r\n                    <h3>View Patient Posts</h3>\r\n                    {/* Fetch patient posts and display them */}\r\n                    <ul>\r\n                        <li>\r\n                            <p>Patient's Post Content</p>\r\n                            <form onSubmit={(e) => this.handleCommentSubmit(e, postId)}>\r\n                                <textarea\r\n                                    rows=\"4\"\r\n                                    cols=\"50\"\r\n                                    value={this.state.postComments}\r\n                                    onChange={this.handleCommentChange}\r\n                                    placeholder=\"Write your comment here...\"\r\n                                ></textarea>\r\n                                <button type=\"submit\">Comment</button>\r\n                            </form>\r\n                        </li>\r\n                        {/* Add more patient posts here */}\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h3>Direct Messages</h3>\r\n                    {/* Implement a direct messaging component for doctor-patient communication */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    // Include state information you need from Redux\r\n    return {};\r\n}\r\n\r\nconst connectedDoctorDashboard = connect(mapStateToProps)(DoctorDashboard);\r\nexport { connectedDoctorDashboard as DoctorDashboard };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\cmpts\\\\FillPreMedicalForm.js\",\n  _s = $RefreshSig$();\n// FillPreMedicalForm.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { fillPreMedicalForm } from '../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FillPreMedicalForm = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [symptoms, setSymptoms] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await fillPreMedicalForm({\n        symptoms,\n        patient: user.id\n      });\n      // You may want to add a success message or redirect to a confirmation page\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill Pre-Medical Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pre-medical-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Symptoms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(FillPreMedicalForm, \"iyGbsGmyw/SKEpvZMugbYiqGzq4=\", false, function () {\n  return [useAuth];\n});\n_c = FillPreMedicalForm;\nexport default FillPreMedicalForm;\nvar _c;\n$RefreshReg$(_c, \"FillPreMedicalForm\");","map":{"version":3,"names":["React","useState","useAuth","fillPreMedicalForm","jsxDEV","_jsxDEV","FillPreMedicalForm","_s","user","symptoms","setSymptoms","handleSubmit","e","preventDefault","patient","id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/cmpts/FillPreMedicalForm.js"],"sourcesContent":["// FillPreMedicalForm.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { fillPreMedicalForm } from '../apiService';\r\n\r\nconst FillPreMedicalForm = () => {\r\n  const { user } = useAuth();\r\n  const [symptoms, setSymptoms] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await fillPreMedicalForm({ symptoms, patient: user.id });\r\n      // You may want to add a success message or redirect to a confirmation page\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Fill Pre-Medical Form</h2>\r\n      <form className=\"pre-medical-form\" onSubmit={handleSubmit}>\r\n        <label>Symptoms:</label>\r\n        <textarea value={symptoms} onChange={(e) => setSymptoms(e.target.value)} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FillPreMedicalForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMV,kBAAkB,CAAC;QAAEM,QAAQ;QAAEK,OAAO,EAAEN,IAAI,CAACO;MAAG,CAAC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA;MAAMa,SAAS,EAAC,kBAAkB;MAACM,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBACxDd,OAAA;QAAAc,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlB,OAAA;QAAUoB,KAAK,EAAEhB,QAAS;QAACiB,QAAQ,EAAGd,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3ElB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxBID,kBAAkB;EAAA,QACLJ,OAAO;AAAA;AAAA2B,EAAA,GADpBvB,kBAAkB;AA0BxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
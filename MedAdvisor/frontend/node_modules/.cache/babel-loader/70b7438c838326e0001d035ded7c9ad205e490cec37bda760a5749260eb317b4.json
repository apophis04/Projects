{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://127.0.0.1:8000/\";\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 5000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Function to set the authorization header with the token\nconst setAuthorizationHeader = token => {\n  if (token) {\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport const registerUser = userData => {\n  return api.post(\"register/\", userData);\n};\nexport const loginUser = userData => {\n  return api.post(\"login/\", userData).then(response => {\n    const token = response.data.token;\n    setAuthorizationHeader(token); // Set the authorization header with the token\n    return response;\n  });\n};\nexport const getUserDetails = () => {\n  return api.get(\"user-details/\");\n};\nexport const logoutUser = () => {\n  return api.post(\"logout/\");\n};\nexport const fillPreMedicalForm = formData => {\n  return api.post(\"fill-pre-medical-form/\", formData);\n};\nexport const getPreMedicalForm = () => {\n  return api.get(\"get-pre-medical-form/\");\n};\nexport const replyToPreMedicalForm = formId => {\n  return api.patch(`reply-to-pre-medical-form/${formId}/`);\n};\nexport const sendMessage = messageData => {\n  return api.post(\"send-message/\", messageData);\n};\nexport const getMessages = () => {\n  return api.get(\"get-messages/\");\n};\nexport const createBlogPost = postData => {\n  return api.post(\"create-blog-post/\", postData);\n};\nexport const createComment = commentData => {\n  return api.post(\"create-comment/\", commentData);\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","timeout","headers","setAuthorizationHeader","token","defaults","common","registerUser","userData","post","loginUser","then","response","data","getUserDetails","get","logoutUser","fillPreMedicalForm","formData","getPreMedicalForm","replyToPreMedicalForm","formId","patch","sendMessage","messageData","getMessages","createBlogPost","postData","createComment","commentData"],"sources":["D:/GitHub/Tuesday/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://127.0.0.1:8000/\";\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Function to set the authorization header with the token\r\nconst setAuthorizationHeader = (token) => {\r\n  if (token) {\r\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete api.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport const registerUser = (userData) => {\r\n  return api.post(\"register/\", userData);\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return api.post(\"login/\", userData).then((response) => {\r\n    const token = response.data.token;\r\n    setAuthorizationHeader(token); // Set the authorization header with the token\r\n    return response;\r\n  });\r\n};\r\n\r\nexport const getUserDetails = () => {\r\n  return api.get(\"user-details/\");\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return api.post(\"logout/\");\r\n};\r\n\r\nexport const fillPreMedicalForm = (formData) => {\r\n  return api.post(\"fill-pre-medical-form/\", formData);\r\n};\r\n\r\nexport const getPreMedicalForm = () => {\r\n  return api.get(\"get-pre-medical-form/\");\r\n};\r\n\r\nexport const replyToPreMedicalForm = (formId) => {\r\n  return api.patch(`reply-to-pre-medical-form/${formId}/`);\r\n};\r\n\r\nexport const sendMessage = (messageData) => {\r\n  return api.post(\"send-message/\", messageData);\r\n};\r\n\r\nexport const getMessages = () => {\r\n  return api.get(\"get-messages/\");\r\n};\r\n\r\nexport const createBlogPost = (postData) => {\r\n  return api.post(\"create-blog-post/\", postData);\r\n};\r\n\r\nexport const createComment = (commentData) => {\r\n  return api.post(\"create-comment/\", commentData);\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EACxC,IAAIA,KAAK,EAAE;IACTN,GAAG,CAACO,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC,GAAI,UAASF,KAAM,EAAC;EAClE,CAAC,MAAM;IACL,OAAON,GAAG,CAACO,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAOV,GAAG,CAACW,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;AACxC,CAAC;AAED,OAAO,MAAME,SAAS,GAAIF,QAAQ,IAAK;EACrC,OAAOV,GAAG,CAACW,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;IACrD,MAAMR,KAAK,GAAGQ,QAAQ,CAACC,IAAI,CAACT,KAAK;IACjCD,sBAAsB,CAACC,KAAK,CAAC,CAAC,CAAC;IAC/B,OAAOQ,QAAQ;EACjB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOhB,GAAG,CAACiB,GAAG,CAAC,eAAe,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAOlB,GAAG,CAACW,IAAI,CAAC,SAAS,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMQ,kBAAkB,GAAIC,QAAQ,IAAK;EAC9C,OAAOpB,GAAG,CAACW,IAAI,CAAC,wBAAwB,EAAES,QAAQ,CAAC;AACrD,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAOrB,GAAG,CAACiB,GAAG,CAAC,uBAAuB,CAAC;AACzC,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAIC,MAAM,IAAK;EAC/C,OAAOvB,GAAG,CAACwB,KAAK,CAAE,6BAA4BD,MAAO,GAAE,CAAC;AAC1D,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,WAAW,IAAK;EAC1C,OAAO1B,GAAG,CAACW,IAAI,CAAC,eAAe,EAAEe,WAAW,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO3B,GAAG,CAACiB,GAAG,CAAC,eAAe,CAAC;AACjC,CAAC;AAED,OAAO,MAAMW,cAAc,GAAIC,QAAQ,IAAK;EAC1C,OAAO7B,GAAG,CAACW,IAAI,CAAC,mBAAmB,EAAEkB,QAAQ,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAK;EAC5C,OAAO/B,GAAG,CAACW,IAAI,CAAC,iBAAiB,EAAEoB,WAAW,CAAC;AACjD,CAAC;AAED,eAAe/B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Users\\\\Doctor.js\",\n  _s = $RefreshSig$();\n// DoctorPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  useEffect(() => {\n    fetchPatientSymptoms();\n    fetchPatientBlogPosts();\n  }, []);\n  const fetchPatientSymptoms = async () => {\n    try {\n      const symptoms = await getPatientSymptoms();\n      setPatientSymptoms(symptoms);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchPatientBlogPosts = async () => {\n    try {\n      const blogPosts = await getPatientBlogPosts();\n      setPatientBlogPosts(blogPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // ... (rest of the code)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), patientSymptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"post-container\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: symptom.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: symptom.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), patientBlogPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"post-container\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"pzrzd+YuGnMMAeIZlGdvtNFiC1c=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getPatientSymptoms","getPatientBlogPosts","replyToPreMedicalForm","createComment","Card","jsxDEV","_jsxDEV","DoctorPage","_s","user","patientSymptoms","setPatientSymptoms","patientBlogPosts","setPatientBlogPosts","commentContent","setCommentContent","fetchPatientSymptoms","fetchPatientBlogPosts","symptoms","error","console","blogPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","symptom","index","Body","Title","title","Text","content","post","id","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Users/Doctor.js"],"sourcesContent":["// DoctorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getPatientSymptoms, getPatientBlogPosts, replyToPreMedicalForm, createComment } from '../apiService';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst DoctorPage = () => {\r\n  const { user } = useAuth();\r\n  const [patientSymptoms, setPatientSymptoms] = useState([]);\r\n  const [patientBlogPosts, setPatientBlogPosts] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPatientSymptoms();\r\n    fetchPatientBlogPosts();\r\n  }, []);\r\n\r\n  const fetchPatientSymptoms = async () => {\r\n    try {\r\n      const symptoms = await getPatientSymptoms();\r\n      setPatientSymptoms(symptoms);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const fetchPatientBlogPosts = async () => {\r\n    try {\r\n      const blogPosts = await getPatientBlogPosts();\r\n      setPatientBlogPosts(blogPosts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // ... (rest of the code)\r\n\r\n  return (\r\n    <div className=\"doctor-page-container\">\r\n      <h2>Patient Posts</h2>\r\n      {patientSymptoms.map((symptom, index) => (\r\n        <Card key={index} className=\"post-container\">\r\n          <Card.Body>\r\n            <Card.Title>{symptom.title}</Card.Title>\r\n            <Card.Text>{symptom.content}</Card.Text>\r\n            {/* Add other symptom-related content here */}\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n      {patientBlogPosts.map((post) => (\r\n        <Card key={post.id} className=\"post-container\">\r\n          <Card.Body>\r\n            <Card.Title>{post.title}</Card.Title>\r\n            <Card.Text>{post.content}</Card.Text>\r\n            {/* Add other blog post-related content here */}\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,qBAAqB,EAAEC,aAAa,QAAQ,eAAe;AAC7G,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdkB,oBAAoB,CAAC,CAAC;IACtBC,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMlB,kBAAkB,CAAC,CAAC;MAC3CW,kBAAkB,CAACO,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMF,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMI,SAAS,GAAG,MAAMpB,mBAAmB,CAAC,CAAC;MAC7CY,mBAAmB,CAACQ,SAAS,CAAC;IAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;;EAEA,oBACEb,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBjB,eAAe,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClCxB,OAAA,CAACF,IAAI;MAAakB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC1CjB,OAAA,CAACF,IAAI,CAAC2B,IAAI;QAAAR,QAAA,gBACRjB,OAAA,CAACF,IAAI,CAAC4B,KAAK;UAAAT,QAAA,EAAEM,OAAO,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACxCrB,OAAA,CAACF,IAAI,CAAC8B,IAAI;UAAAX,QAAA,EAAEM,OAAO,CAACM;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/B;IAAC,GALHG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACP,CAAC,EACDf,gBAAgB,CAACgB,GAAG,CAAEQ,IAAI,iBACzB9B,OAAA,CAACF,IAAI;MAAekB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC5CjB,OAAA,CAACF,IAAI,CAAC2B,IAAI;QAAAR,QAAA,gBACRjB,OAAA,CAACF,IAAI,CAAC4B,KAAK;UAAAT,QAAA,EAAEa,IAAI,CAACH;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACrCrB,OAAA,CAACF,IAAI,CAAC8B,IAAI;UAAAX,QAAA,EAAEa,IAAI,CAACD;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5B;IAAC,GALHS,IAAI,CAACC,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtDID,UAAU;EAAA,QACGR,OAAO;AAAA;AAAAuC,EAAA,GADpB/B,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
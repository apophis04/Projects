{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\cmpts\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { login as apiLogin } from '../apiService'; // Rename the imported login function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    handleLogin\n  } = useAuth(); // Rename to handleLogin to avoid conflict\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLoginFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const user = await apiLogin(username, password); // Use the renamed login function\n      handleLogin(username, password); // Use the handleLogin function from useAuth\n\n      // Redirect logic remains the same\n      console.log('Logged in user:', user);\n      if (user) {\n        switch (user.role) {\n          case 'patient':\n            navigate('/patient/dashboard');\n            break;\n          case 'doctor':\n            navigate('/doctor/dashboard');\n            break;\n          case 'admin':\n            navigate('/admin/dashboard');\n            break;\n          default:\n            break;\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle login error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"D5UoTuvXsEWHPP//KTUcBhsNA2Q=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","login","apiLogin","jsxDEV","_jsxDEV","Login","_s","handleLogin","navigate","username","setUsername","password","setPassword","handleLoginFormSubmit","e","preventDefault","user","console","log","role","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/cmpts/Login.js"],"sourcesContent":["// Login.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as apiLogin } from '../apiService'; // Rename the imported login function\r\n\r\nconst Login = () => {\r\n  const { handleLogin } = useAuth(); // Rename to handleLogin to avoid conflict\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLoginFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await apiLogin(username, password); // Use the renamed login function\r\n      handleLogin(username, password); // Use the handleLogin function from useAuth\r\n\r\n      // Redirect logic remains the same\r\n      console.log('Logged in user:', user);\r\n\r\n      if (user) {\r\n        switch (user.role) {\r\n          case 'patient':\r\n            navigate('/patient/dashboard');\r\n            break;\r\n          case 'doctor':\r\n            navigate('/doctor/dashboard');\r\n            break;\r\n          case 'admin':\r\n            navigate('/admin/dashboard');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle login error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLoginFormSubmit}>\r\n        <label>\r\n          Username:\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
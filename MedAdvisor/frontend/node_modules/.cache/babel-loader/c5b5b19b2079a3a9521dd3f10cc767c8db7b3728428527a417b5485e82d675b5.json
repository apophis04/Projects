{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\web\\\\Design\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { getMessages, createMessage } from '../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageComponent = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Fetch messages when the component mounts\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const messagesData = await getMessages();\n      setMessages(messagesData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSendMessage = async () => {\n    try {\n      // Create a new message\n      const messageData = {\n        content: newMessage,\n        receiver: 1 // Replace with the actual receiver ID\n      };\n\n      await createMessage(messageData);\n\n      // Fetch messages again to update the list\n      fetchMessages();\n\n      // Clear the input field\n      setNewMessage('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sender: \", message.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your message\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageComponent, \"3FBbagjpE56yrcaN7KuSVTVqhHE=\", false, function () {\n  return [useAuth];\n});\n_c = MessageComponent;\nexport default MessageComponent;\nvar _c;\n$RefreshReg$(_c, \"MessageComponent\");","map":{"version":3,"names":["useState","useEffect","useAuth","getMessages","createMessage","jsxDEV","_jsxDEV","MessageComponent","_s","user","messages","setMessages","newMessage","setNewMessage","fetchMessages","messagesData","error","console","handleSendMessage","messageData","content","receiver","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","sender","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/web/Design/Cards.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { getMessages, createMessage } from '../apiService';\r\n\r\nconst MessageComponent = () => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch messages when the component mounts\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const messagesData = await getMessages();\r\n      setMessages(messagesData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      // Create a new message\r\n      const messageData = {\r\n        content: newMessage,\r\n        receiver: 1, // Replace with the actual receiver ID\r\n      };\r\n  \r\n      await createMessage(messageData);\r\n  \r\n      // Fetch messages again to update the list\r\n      fetchMessages();\r\n  \r\n      // Clear the input field\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Messages</h2>\r\n      <ul>\r\n        {messages.map((message) => (\r\n          <li key={message.id}>\r\n            <p>{message.content}</p>\r\n            <p>Sender: {message.sender}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <textarea\r\n        placeholder=\"Type your message\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send Message</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,WAAW,EAAEC,aAAa,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAa,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMZ,WAAW,CAAC,CAAC;MACxCQ,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAER,UAAU;QACnBS,QAAQ,EAAE,CAAC,CAAE;MACf,CAAC;;MAED,MAAMjB,aAAa,CAACe,WAAW,CAAC;;MAEhC;MACAL,aAAa,CAAC,CAAC;;MAEf;MACAD,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,oBACEV,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAIM,OAAO,CAACR;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBpB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACC,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFxBE,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLpB,OAAA;MACEyB,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEpB,UAAW;MAClBqB,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFpB,OAAA;MAAQ8B,OAAO,EAAElB,iBAAkB;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3DID,gBAAgB;EAAA,QACHL,OAAO;AAAA;AAAAmC,EAAA,GADpB9B,gBAAgB;AA6DtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
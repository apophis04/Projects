{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\PatientDashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ... (previous code)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PatientDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postContent: '',\n      preMedicalForm: null // Track the selected pre-medical form file\n    };\n\n    this.handlePostChange = this.handlePostChange.bind(this);\n    this.handlePreMedicalFormChange = this.handlePreMedicalFormChange.bind(this);\n    this.handlePostSubmit = this.handlePostSubmit.bind(this);\n  }\n  handlePostChange(e) {\n    this.setState({\n      postContent: e.target.value\n    });\n  }\n  handlePreMedicalFormChange(e) {\n    this.setState({\n      preMedicalForm: e.target.files[0]\n    });\n  }\n  handlePostSubmit(e) {\n    e.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    const {\n      postContent,\n      preMedicalForm\n    } = this.state;\n\n    // Handle creating a post here and sending it to the server\n    // Include the pre_medical_form attachment if needed\n    // Use the FormData API to send the form data, including the attached file\n    const formData = new FormData();\n    formData.append('postContent', postContent);\n    formData.append('preMedicalForm', preMedicalForm);\n    dispatch(userActions.createPost(formData));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handlePostSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: this.state.postContent,\n            onChange: this.handlePostChange,\n            placeholder: \"Write your post here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf,.doc,.docx\" // Allow only specific file types\n            ,\n            onChange: this.handlePreMedicalFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction mapStateToProps(state) {\n  // Include state information you need from Redux\n  return {};\n}\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\nexport { connectedPatientDashboard as PatientDashboard };","map":{"version":3,"names":["React","Component","connect","jsxDEV","_jsxDEV","PatientDashboard","constructor","props","state","postContent","preMedicalForm","handlePostChange","bind","handlePreMedicalFormChange","handlePostSubmit","e","setState","target","value","files","preventDefault","dispatch","formData","FormData","append","userActions","createPost","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","onChange","placeholder","type","accept","mapStateToProps","connectedPatientDashboard"],"sources":["D:/GitHub/Tuesday/frontend/src/components/PatientDashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// ... (previous code)\r\n\r\nclass PatientDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postContent: '',\r\n            preMedicalForm: null, // Track the selected pre-medical form file\r\n        };\r\n\r\n        this.handlePostChange = this.handlePostChange.bind(this);\r\n        this.handlePreMedicalFormChange = this.handlePreMedicalFormChange.bind(this);\r\n        this.handlePostSubmit = this.handlePostSubmit.bind(this);\r\n    }\r\n\r\n    handlePostChange(e) {\r\n        this.setState({ postContent: e.target.value });\r\n    }\r\n\r\n    handlePreMedicalFormChange(e) {\r\n        this.setState({ preMedicalForm: e.target.files[0] });\r\n    }\r\n\r\n    handlePostSubmit(e) {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        const { postContent, preMedicalForm } = this.state;\r\n\r\n        // Handle creating a post here and sending it to the server\r\n        // Include the pre_medical_form attachment if needed\r\n        // Use the FormData API to send the form data, including the attached file\r\n        const formData = new FormData();\r\n        formData.append('postContent', postContent);\r\n        formData.append('preMedicalForm', preMedicalForm);\r\n\r\n        dispatch(userActions.createPost(formData));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Patient Dashboard</h2>\r\n                <div>\r\n                    <h3>Create a Post</h3>\r\n                    <form onSubmit={this.handlePostSubmit}>\r\n                        <textarea\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            value={this.state.postContent}\r\n                            onChange={this.handlePostChange}\r\n                            placeholder=\"Write your post here...\"\r\n                        ></textarea>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\".pdf,.doc,.docx\" // Allow only specific file types\r\n                            onChange={this.handlePreMedicalFormChange}\r\n                        />\r\n                        <button type=\"submit\">Create Post</button>\r\n                    </form>\r\n                </div>\r\n                {/* ... (other sections) */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    // Include state information you need from Redux\r\n    return {};\r\n}\r\n\r\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\r\nexport { connectedPatientDashboard as PatientDashboard };\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\components\\\\PatientDashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ... (previous code)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass PatientDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postContent: '',\n      preMedicalForm: null,\n      postComments: {} // Track comments for each patient post\n    };\n\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    this.handlePostChange = this.handlePostChange.bind(this);\n    this.handlePreMedicalFormChange = this.handlePreMedicalFormChange.bind(this);\n    this.handlePostSubmit = this.handlePostSubmit.bind(this);\n  }\n  handleCommentChange(e, postId) {\n    const {\n      value\n    } = e.target;\n    this.setState(prevState => ({\n      postComments: {\n        ...prevState.postComments,\n        [postId]: value\n      }\n    }));\n  }\n  handleCommentSubmit(e, postId) {\n    e.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    const commentContent = this.state.postComments[postId];\n\n    // Handle sending the comment to the server for the specified post\n    dispatch(userActions.addComment(postId, commentContent));\n  }\n  handlePostChange(e) {\n    this.setState({\n      postContent: e.target.value\n    });\n  }\n  handlePreMedicalFormChange(e) {\n    this.setState({\n      preMedicalForm: e.target.files[0]\n    });\n  }\n  handlePostSubmit(e) {\n    e.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    const {\n      postContent,\n      preMedicalForm\n    } = this.state;\n\n    // Handle creating a post here and sending it to the server\n    // Include the pre_medical_form attachment if needed\n    // Use the FormData API to send the form data, including the attached file\n    const formData = new FormData();\n    formData.append('postContent', postContent);\n    formData.append('preMedicalForm', preMedicalForm);\n    dispatch(userActions.createPost(formData));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"4\",\n              cols: \"50\",\n              value: this.state.postContent,\n              onChange: this.handlePostChange,\n              placeholder: \"Write your post here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".pdf,.doc,.docx\" // Allow only specific file types\n              ,\n              onChange: this.handlePreMedicalFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: patientPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => this.handleCommentSubmit(e, post.id),\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"4\",\n                  cols: \"50\",\n                  value: this.state.postComments[post.id] || '',\n                  onChange: e => this.handleCommentChange(e, post.id),\n                  placeholder: \"Write your comment here...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n// ... (remaining code)\n\nfunction mapStateToProps(state) {\n  // Include state information you need from Redux\n  return {};\n}\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\nexport { connectedPatientDashboard as PatientDashboard };","map":{"version":3,"names":["React","Component","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientDashboard","constructor","props","state","postContent","preMedicalForm","postComments","handleCommentChange","bind","handleCommentSubmit","handlePostChange","handlePreMedicalFormChange","handlePostSubmit","e","postId","value","target","setState","prevState","preventDefault","dispatch","commentContent","userActions","addComment","files","formData","FormData","append","createPost","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","onChange","placeholder","type","accept","patientPosts","map","post","content","id","mapStateToProps","connectedPatientDashboard"],"sources":["D:/GitHub/Tuesday/frontend/src/components/PatientDashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// ... (previous code)\r\n\r\nclass PatientDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postContent: '',\r\n            preMedicalForm: null,\r\n            postComments: {}, // Track comments for each patient post\r\n        };\r\n        this.handleCommentChange = this.handleCommentChange.bind(this);\r\n        this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\r\n        this.handlePostChange = this.handlePostChange.bind(this);\r\n        this.handlePreMedicalFormChange = this.handlePreMedicalFormChange.bind(this);\r\n        this.handlePostSubmit = this.handlePostSubmit.bind(this);\r\n    }\r\n\r\n    handleCommentChange(e, postId) {\r\n        const { value } = e.target;\r\n        this.setState((prevState) => ({\r\n            postComments: {\r\n                ...prevState.postComments,\r\n                [postId]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n        handleCommentSubmit(e, postId) {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        const commentContent = this.state.postComments[postId];\r\n\r\n        // Handle sending the comment to the server for the specified post\r\n        dispatch(userActions.addComment(postId, commentContent));\r\n    }\r\n\r\n    handlePostChange(e) {\r\n        this.setState({ postContent: e.target.value });\r\n    }\r\n\r\n    handlePreMedicalFormChange(e) {\r\n        this.setState({ preMedicalForm: e.target.files[0] });\r\n    }\r\n\r\n    handlePostSubmit(e) {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        const { postContent, preMedicalForm } = this.state;\r\n\r\n        // Handle creating a post here and sending it to the server\r\n        // Include the pre_medical_form attachment if needed\r\n        // Use the FormData API to send the form data, including the attached file\r\n        const formData = new FormData();\r\n        formData.append('postContent', postContent);\r\n        formData.append('preMedicalForm', preMedicalForm);\r\n\r\n        dispatch(userActions.createPost(formData));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div>\r\n                <h2>Patient Dashboard</h2>\r\n                <div>\r\n                    <h3>Create a Post</h3>\r\n                    <form onSubmit={this.handlePostSubmit}>\r\n                        <textarea\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            value={this.state.postContent}\r\n                            onChange={this.handlePostChange}\r\n                            placeholder=\"Write your post here...\"\r\n                        ></textarea>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\".pdf,.doc,.docx\" // Allow only specific file types\r\n                            onChange={this.handlePreMedicalFormChange}\r\n                        />\r\n                        <button type=\"submit\">Create Post</button>\r\n                    </form>\r\n                </div>\r\n                {/* ... (other sections) */}\r\n            </div>\r\n            <div>\r\n                <h2>Patient Dashboard</h2>\r\n                <div>\r\n                    <h3>Your Posts</h3>\r\n                    <ul>\r\n                        {patientPosts.map((post) => (\r\n                            <li key={post.id}>\r\n                                <p>{post.content}</p>\r\n                                <form onSubmit={(e) => this.handleCommentSubmit(e, post.id)}>\r\n                                    <textarea\r\n                                        rows=\"4\"\r\n                                        cols=\"50\"\r\n                                        value={this.state.postComments[post.id] || ''}\r\n                                        onChange={(e) => this.handleCommentChange(e, post.id)}\r\n                                        placeholder=\"Write your comment here...\"\r\n                                    ></textarea>\r\n                                    <button type=\"submit\">Comment</button>\r\n                                </form>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                {/* ... (other sections) */}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// ... (remaining code)\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    // Include state information you need from Redux\r\n    return {};\r\n}\r\n\r\nconst connectedPatientDashboard = connect(mapStateToProps)(PatientDashboard);\r\nexport { connectedPatientDashboard as PatientDashboard };\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
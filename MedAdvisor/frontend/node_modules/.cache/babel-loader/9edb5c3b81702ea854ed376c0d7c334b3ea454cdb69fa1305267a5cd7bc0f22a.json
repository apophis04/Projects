{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Tuesday\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React from 'react';\nimport { AuthProvider } from './web/AuthContext';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './web/Design/Navbar';\nimport Login from './web/cmpts/Login';\nimport Logout from './web/cmpts/Logout';\nimport Patient from './web/Users/Patient';\nimport Doctor from './web/Users/Doctor';\nimport Admin from './web/Users/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  role,\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  if (!user || user.role !== role) {\n    // Redirect to login if the user is not logged in or has the wrong role\n    return null; // You can also use 'return <Redirect to=\"/login\" />' if using React Router Redirect component\n  }\n\n  return children;\n};\n_s(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", true);\n_c = PrivateRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/patient\",\n          role: \"patient\",\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Patient, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/doctor\",\n          role: \"doctor\",\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Doctor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/admin\",\n          role: \"admin\",\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","AuthProvider","Navbar","Login","Logout","Patient","Doctor","Admin","jsxDEV","_jsxDEV","PrivateRoute","role","children","_s","user","useAuth","_c","App","Router","fileName","_jsxFileName","lineNumber","columnNumber","Routes","Route","path","element","index","_c2","$RefreshReg$"],"sources":["D:/GitHub/Tuesday/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React from 'react';\nimport { AuthProvider } from './web/AuthContext';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './web/Design/Navbar';\nimport Login from './web/cmpts/Login';\nimport Logout from './web/cmpts/Logout';\nimport Patient from './web/Users/Patient';\nimport Doctor from './web/Users/Doctor';\nimport Admin from './web/Users/Admin';\n\nconst PrivateRoute = ({ role, children }) => {\n  const { user } = useAuth();\n\n  if (!user || user.role !== role) {\n    // Redirect to login if the user is not logged in or has the wrong role\n    return null; // You can also use 'return <Redirect to=\"/login\" />' if using React Router Redirect component\n  }\n\n  return children;\n};\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <PrivateRoute path=\"/patient\" role=\"patient\">\n            <Route index element={<Patient />} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/doctor\" role=\"doctor\">\n            <Route index element={<Doctor />} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin\" role=\"admin\">\n            <Route index element={<Admin />} />\n          </PrivateRoute>\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
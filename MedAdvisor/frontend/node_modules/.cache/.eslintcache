[{"D:\\GitHub\\Tuesday\\frontend\\src\\index.js":"1","D:\\GitHub\\Tuesday\\frontend\\src\\reportWebVitals.js":"2","D:\\GitHub\\Tuesday\\frontend\\src\\App.js":"3","D:\\GitHub\\Tuesday\\frontend\\src\\web\\AuthContext.js":"4","D:\\GitHub\\Tuesday\\frontend\\src\\web\\apiService.js":"5","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Login.js":"6","D:\\GitHub\\Tuesday\\frontend\\src\\web\\Design\\Navbar.js":"7","D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Patient.js":"8","D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Admin.js":"9","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Patient\\CombinedForm.js":"10","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Patient\\PatientPgae.js":"11","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Register.js":"12","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\AdminPage.js":"13","D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Doctor.js":"14","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Doctor\\DoctorPage.js":"15","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\PostView.js":"16","D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\AdminAuth.js":"17","D:\\GitHub\\MedAdvisor\\frontend\\src\\index.js":"18","D:\\GitHub\\MedAdvisor\\frontend\\src\\App.js":"19","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\AuthContext.js":"20","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\apiService.js":"21","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Login.js":"22","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Design\\Navbar.js":"23","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Patient.js":"24","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Register.js":"25","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Doctor.js":"26","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Admin.js":"27","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Patient\\CombinedForm.js":"28","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Doctor\\DoctorPage.js":"29","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Patient\\PatientPgae.js":"30","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Admin\\AdminPage.js":"31","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Admin\\AdminAuth.js":"32"},{"size":331,"mtime":1699828488176,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1698737893385,"results":"35","hashOfConfig":"34"},{"size":1129,"mtime":1699992776309,"results":"36","hashOfConfig":"34"},{"size":1544,"mtime":1700042198980,"results":"37","hashOfConfig":"34"},{"size":5185,"mtime":1700042191787,"results":"38","hashOfConfig":"34"},{"size":1952,"mtime":1699997684482,"results":"39","hashOfConfig":"34"},{"size":2205,"mtime":1699997655439,"results":"40","hashOfConfig":"34"},{"size":629,"mtime":1699997628150,"results":"41","hashOfConfig":"34"},{"size":264,"mtime":1699997489719,"results":"42","hashOfConfig":"34"},{"size":3655,"mtime":1700319539012,"results":"43","hashOfConfig":"34"},{"size":4953,"mtime":1699997721980,"results":"44","hashOfConfig":"34"},{"size":3659,"mtime":1700042183660,"results":"45","hashOfConfig":"34"},{"size":1976,"mtime":1699997761534,"results":"46","hashOfConfig":"34"},{"size":200,"mtime":1699997633844,"results":"47","hashOfConfig":"34"},{"size":5444,"mtime":1700041893935,"results":"48","hashOfConfig":"34"},{"size":3259,"mtime":1699993983244,"results":"49","hashOfConfig":"34"},{"size":5193,"mtime":1699997086013,"results":"50","hashOfConfig":"34"},{"size":345,"mtime":1700734271693,"results":"51","hashOfConfig":"52"},{"size":1164,"mtime":1700734271691,"results":"53","hashOfConfig":"52"},{"size":1544,"mtime":1700734271695,"results":"54","hashOfConfig":"52"},{"size":5457,"mtime":1700899560580,"results":"55","hashOfConfig":"52"},{"size":1952,"mtime":1700734271698,"results":"56","hashOfConfig":"52"},{"size":2205,"mtime":1700734271695,"results":"57","hashOfConfig":"52"},{"size":629,"mtime":1700734271697,"results":"58","hashOfConfig":"52"},{"size":3659,"mtime":1700734271703,"results":"59","hashOfConfig":"52"},{"size":200,"mtime":1700734271697,"results":"60","hashOfConfig":"52"},{"size":264,"mtime":1700734271695,"results":"61","hashOfConfig":"52"},{"size":10701,"mtime":1700767516428,"results":"62","hashOfConfig":"52"},{"size":6338,"mtime":1700769999065,"results":"63","hashOfConfig":"52"},{"size":6316,"mtime":1700855219917,"results":"64","hashOfConfig":"52"},{"size":1980,"mtime":1700897634576,"results":"65","hashOfConfig":"52"},{"size":5203,"mtime":1700899528878,"results":"66","hashOfConfig":"52"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1wf7q73",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"72udep",{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\Tuesday\\frontend\\src\\index.js",[],[],["166"],"D:\\GitHub\\Tuesday\\frontend\\src\\reportWebVitals.js",[],[],["167"],"D:\\GitHub\\Tuesday\\frontend\\src\\App.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\AuthContext.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\apiService.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Login.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\Design\\Navbar.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Patient.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Admin.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Patient\\CombinedForm.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Patient\\PatientPgae.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Register.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\AdminPage.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\Users\\Doctor.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Doctor\\DoctorPage.js",[],["168"],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\PostView.js",[],[],"D:\\GitHub\\Tuesday\\frontend\\src\\web\\cmpts\\Admin\\AdminAuth.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\index.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\App.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\AuthContext.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\apiService.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Login.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Design\\Navbar.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Patient.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Register.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Doctor.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\Users\\Admin.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Patient\\CombinedForm.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Doctor\\DoctorPage.js",[],["169"],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Patient\\PatientPgae.js",["170"],[],"// PatientPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../AuthContext';\r\nimport { getPatientBlogPosts, createComment, getPatientSymptoms, getComments } from '../../apiService';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nconst PatientPage = () => {\r\n  const { user } = useAuth();\r\n  const [patientData, setPatientData] = useState([]);\r\n  const [commentContents, setCommentContents] = useState({});\r\n  const [selectedBlogPostId, setSelectedBlogPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [showComments, setShowComments] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchPatientData();\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBlogPostId) {\r\n      fetchComments(selectedBlogPostId);\r\n    }\r\n  }, [selectedBlogPostId]);\r\n\r\n  const fetchPatientData = async () => {\r\n    try {\r\n      const blogPosts = await getPatientBlogPosts(user.id);\r\n      const symptomsData = await getPatientSymptoms(user.id);\r\n  \r\n      console.log('Blog Posts:', blogPosts);\r\n      console.log('Symptoms Data:', symptomsData);\r\n  \r\n      const mergedData = blogPosts\r\n        .filter((post) => post.author === user.id)\r\n        .map((post, index) => {\r\n          const correspondingSymptom = symptomsData[index];\r\n  \r\n          return {\r\n            ...post,\r\n            symptoms: correspondingSymptom ? correspondingSymptom.symptoms : null,\r\n            age: correspondingSymptom ? correspondingSymptom.age : null,\r\n            country: correspondingSymptom ? correspondingSymptom.country : null,\r\n            gender: correspondingSymptom ? correspondingSymptom.gender : null,\r\n            disorders_diagnosed: correspondingSymptom ? correspondingSymptom.disorders_diagnosed : null,\r\n            prediction: correspondingSymptom ? correspondingSymptom.prediction : null,\r\n          };\r\n        });\r\n  \r\n      console.log('Merged Data:', mergedData);\r\n  \r\n      setPatientData(mergedData);\r\n  \r\n      const initialCommentContents = {};\r\n      mergedData.forEach((post) => {\r\n        initialCommentContents[post.id] = '';\r\n      });\r\n      setCommentContents(initialCommentContents);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleComment = async (postId, patientUserId) => {\r\n    try {\r\n      const content = commentContents[postId];\r\n      await createComment({\r\n        content,\r\n        author: user.id,\r\n        blog_post: postId,\r\n        commenter_role: 'patient',\r\n        receiver: patientUserId,\r\n      });\r\n\r\n      setCommentContents((prevContents) => ({\r\n        ...prevContents,\r\n        [postId]: '',\r\n      }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (blogPostId) => {\r\n    try {\r\n      const commentsData = await getComments(blogPostId);\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleShowComments = (postId) => {\r\n    setSelectedBlogPostId(postId);\r\n    setShowComments(true);\r\n    fetchComments(postId);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setSelectedBlogPostId(null);\r\n    setShowComments(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"mb-4\">Patient Posts</h2>\r\n      <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n        {patientData.map((post) => (\r\n          <Col key={post.id} className=\"mb-4\">\r\n            <Card bg=\"light\" text=\"dark\">\r\n              <Card.Body>\r\n                <Card.Title>{post.title}</Card.Title>\r\n                <Card.Text><strong>Patient Symptoms:</strong> {post.symptoms}</Card.Text>\r\n                <Card.Text><strong>Post Content:</strong> {post.content}</Card.Text>\r\n                <Card.Text><strong>Age:</strong> {post.age}</Card.Text>\r\n                <Card.Text><strong>Country:</strong> {post.country}</Card.Text>\r\n                <Card.Text><strong>Gender:</strong> {post.gender}</Card.Text>\r\n                <Card.Text><strong>Disorders Diagnosed:</strong> {post.disorders_diagnosed}</Card.Text>\r\n                <Card.Text><strong>Stress %:</strong> {post.prediction}</Card.Text>\r\n                {post.predictions && (\r\n                  <Card.Text className=\"mt-3\"><strong>ML Predictions:</strong> {post.predictions}</Card.Text>\r\n                )}\r\n\r\n                <Button variant=\"outline-secondary\" onClick={() => handleShowComments(post.id)}>\r\n                  Show Comments\r\n                </Button>\r\n                <textarea\r\n                  className=\"form-control mt-3\"\r\n                  placeholder=\"Type your comment\"\r\n                  value={commentContents[post.id]}\r\n                  onChange={(e) => setCommentContents((prevContents) => ({\r\n                    ...prevContents,\r\n                    [post.id]: e.target.value,\r\n                  }))}\r\n                />\r\n                <Button variant=\"outline-success\" className=\"mt-3\" onClick={() => handleComment(post.id, post.patient)}>\r\n                  Comment\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Offcanvas show={showComments} onHide={handleCloseComments} style={{ backgroundColor: '#fff', color: '#000', width: '25rem' }}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title className=\"text-dark\"><h3>Comments</h3></Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          {selectedBlogPostId && (\r\n            <div>\r\n              <ul className=\"list-unstyled\">\r\n                {comments.map((comment) => (\r\n                  <li key={comment.id} className=\"mb-3\">\r\n                    <div className={`p-3 border rounded ${comment.commenter_role === 'doctor' ? 'bg-light' : 'bg-info'} text-dark`}>\r\n                      <strong>{comment.commenter_role === 'doctor' ? 'Doctor' : 'Patient'}</strong>: {comment.content}\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientPage;","D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Admin\\AdminPage.js",[],[],"D:\\GitHub\\MedAdvisor\\frontend\\src\\web\\cmpts\\Admin\\AdminAuth.js",[],[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"171","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":26,"suppressions":"178"},{"ruleId":"174","severity":1,"message":"175","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":26,"suppressions":"179"},{"ruleId":"180","severity":1,"message":"181","line":20,"column":6,"nodeType":"182","endLine":20,"endColumn":15,"suggestions":"183"},"no-new-object",["184"],["184"],"no-unused-vars","'selectedDoctorId' is assigned a value but never used.","Identifier","unusedVar",["185"],["186"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPatientData'. Either include it or remove the dependency array.","ArrayExpression",["187"],"no-object-constructor",{"kind":"188","justification":"189"},{"kind":"188","justification":"189"},{"desc":"190","fix":"191"},"directive","","Update the dependencies array to be: [fetchPatientData, user.id]",{"range":"192","text":"193"},[854,863],"[fetchPatientData, user.id]"]